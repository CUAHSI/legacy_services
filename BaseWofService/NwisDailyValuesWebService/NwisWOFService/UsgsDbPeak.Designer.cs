//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace NwisWOFService {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("UsgsDbPeak")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class UsgsDbPeak : System.Data.DataSet {
        
        private peak_flatfileDataTable tablepeak_flatfile;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UsgsDbPeak() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected UsgsDbPeak(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["peak_flatfile"] != null)) {
                    base.Tables.Add(new peak_flatfileDataTable(ds.Tables["peak_flatfile"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public peak_flatfileDataTable peak_flatfile {
            get {
                return this.tablepeak_flatfile;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            UsgsDbPeak cln = ((UsgsDbPeak)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["peak_flatfile"] != null)) {
                    base.Tables.Add(new peak_flatfileDataTable(ds.Tables["peak_flatfile"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablepeak_flatfile = ((peak_flatfileDataTable)(base.Tables["peak_flatfile"]));
            if ((initTable == true)) {
                if ((this.tablepeak_flatfile != null)) {
                    this.tablepeak_flatfile.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "UsgsDbPeak";
            this.Prefix = "NwisWOFService";
            this.Namespace = "http://cuahsi.sdsc.edu/db/UsgsDbPeak.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablepeak_flatfile = new peak_flatfileDataTable();
            base.Tables.Add(this.tablepeak_flatfile);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializepeak_flatfile() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            UsgsDbPeak ds = new UsgsDbPeak();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void peak_flatfileRowChangeEventHandler(object sender, peak_flatfileRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class peak_flatfileDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnorganization;
            
            private System.Data.DataColumn columnSiteCode;
            
            private System.Data.DataColumn columnSitename;
            
            private System.Data.DataColumn columnLatitude;
            
            private System.Data.DataColumn columnLongitude;
            
            private System.Data.DataColumn columndatum;
            
            private System.Data.DataColumn columnState;
            
            private System.Data.DataColumn columnCounty;
            
            private System.Data.DataColumn columnusgs_Country;
            
            private System.Data.DataColumn columnelevation_m;
            
            private System.Data.DataColumn columnverticalDatum;
            
            private System.Data.DataColumn columnusgs_station_type_cd;
            
            private System.Data.DataColumn columnusgs_timeZone;
            
            private System.Data.DataColumn columnusgs_usesDaylightSavings;
            
            private System.Data.DataColumn columnVariableCode;
            
            private System.Data.DataColumn columnVariableName;
            
            private System.Data.DataColumn columnVariableUnits;
            
            private System.Data.DataColumn columnpeak_count_nu;
            
            private System.Data.DataColumn columnusgs_huc_cd;
            
            private System.Data.DataColumn columnpeak_BeginDateTime;
            
            private System.Data.DataColumn columnpeak_EndDateTime;
            
            private System.Data.DataColumn columnpeak_begin_date;
            
            private System.Data.DataColumn columnpeak_end_date;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public peak_flatfileDataTable() {
                this.TableName = "peak_flatfile";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal peak_flatfileDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected peak_flatfileDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn organizationColumn {
                get {
                    return this.columnorganization;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SiteCodeColumn {
                get {
                    return this.columnSiteCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SitenameColumn {
                get {
                    return this.columnSitename;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LatitudeColumn {
                get {
                    return this.columnLatitude;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LongitudeColumn {
                get {
                    return this.columnLongitude;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn datumColumn {
                get {
                    return this.columndatum;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CountyColumn {
                get {
                    return this.columnCounty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn usgs_CountryColumn {
                get {
                    return this.columnusgs_Country;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn elevation_mColumn {
                get {
                    return this.columnelevation_m;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn verticalDatumColumn {
                get {
                    return this.columnverticalDatum;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn usgs_station_type_cdColumn {
                get {
                    return this.columnusgs_station_type_cd;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn usgs_timeZoneColumn {
                get {
                    return this.columnusgs_timeZone;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn usgs_usesDaylightSavingsColumn {
                get {
                    return this.columnusgs_usesDaylightSavings;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VariableCodeColumn {
                get {
                    return this.columnVariableCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VariableNameColumn {
                get {
                    return this.columnVariableName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VariableUnitsColumn {
                get {
                    return this.columnVariableUnits;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn peak_count_nuColumn {
                get {
                    return this.columnpeak_count_nu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn usgs_huc_cdColumn {
                get {
                    return this.columnusgs_huc_cd;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn peak_BeginDateTimeColumn {
                get {
                    return this.columnpeak_BeginDateTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn peak_EndDateTimeColumn {
                get {
                    return this.columnpeak_EndDateTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn peak_begin_dateColumn {
                get {
                    return this.columnpeak_begin_date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn peak_end_dateColumn {
                get {
                    return this.columnpeak_end_date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public peak_flatfileRow this[int index] {
                get {
                    return ((peak_flatfileRow)(this.Rows[index]));
                }
            }
            
            public event peak_flatfileRowChangeEventHandler peak_flatfileRowChanging;
            
            public event peak_flatfileRowChangeEventHandler peak_flatfileRowChanged;
            
            public event peak_flatfileRowChangeEventHandler peak_flatfileRowDeleting;
            
            public event peak_flatfileRowChangeEventHandler peak_flatfileRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addpeak_flatfileRow(peak_flatfileRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public peak_flatfileRow Addpeak_flatfileRow(
                        string organization, 
                        string SiteCode, 
                        string Sitename, 
                        float Latitude, 
                        float Longitude, 
                        string datum, 
                        string State, 
                        string County, 
                        string usgs_Country, 
                        float elevation_m, 
                        string verticalDatum, 
                        string usgs_station_type_cd, 
                        string usgs_timeZone, 
                        string usgs_usesDaylightSavings, 
                        string VariableCode, 
                        string VariableName, 
                        string VariableUnits, 
                        int peak_count_nu, 
                        string usgs_huc_cd, 
                        System.DateTime peak_BeginDateTime, 
                        System.DateTime peak_EndDateTime, 
                        string peak_begin_date, 
                        string peak_end_date) {
                peak_flatfileRow rowpeak_flatfileRow = ((peak_flatfileRow)(this.NewRow()));
                rowpeak_flatfileRow.ItemArray = new object[] {
                        organization,
                        SiteCode,
                        Sitename,
                        Latitude,
                        Longitude,
                        datum,
                        State,
                        County,
                        usgs_Country,
                        elevation_m,
                        verticalDatum,
                        usgs_station_type_cd,
                        usgs_timeZone,
                        usgs_usesDaylightSavings,
                        VariableCode,
                        VariableName,
                        VariableUnits,
                        peak_count_nu,
                        usgs_huc_cd,
                        peak_BeginDateTime,
                        peak_EndDateTime,
                        peak_begin_date,
                        peak_end_date};
                this.Rows.Add(rowpeak_flatfileRow);
                return rowpeak_flatfileRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                peak_flatfileDataTable cln = ((peak_flatfileDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new peak_flatfileDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnorganization = base.Columns["organization"];
                this.columnSiteCode = base.Columns["SiteCode"];
                this.columnSitename = base.Columns["Sitename"];
                this.columnLatitude = base.Columns["Latitude"];
                this.columnLongitude = base.Columns["Longitude"];
                this.columndatum = base.Columns["datum"];
                this.columnState = base.Columns["State"];
                this.columnCounty = base.Columns["County"];
                this.columnusgs_Country = base.Columns["usgs_Country"];
                this.columnelevation_m = base.Columns["elevation_m"];
                this.columnverticalDatum = base.Columns["verticalDatum"];
                this.columnusgs_station_type_cd = base.Columns["usgs_station_type_cd"];
                this.columnusgs_timeZone = base.Columns["usgs_timeZone"];
                this.columnusgs_usesDaylightSavings = base.Columns["usgs_usesDaylightSavings"];
                this.columnVariableCode = base.Columns["VariableCode"];
                this.columnVariableName = base.Columns["VariableName"];
                this.columnVariableUnits = base.Columns["VariableUnits"];
                this.columnpeak_count_nu = base.Columns["peak_count_nu"];
                this.columnusgs_huc_cd = base.Columns["usgs_huc_cd"];
                this.columnpeak_BeginDateTime = base.Columns["peak_BeginDateTime"];
                this.columnpeak_EndDateTime = base.Columns["peak_EndDateTime"];
                this.columnpeak_begin_date = base.Columns["peak_begin_date"];
                this.columnpeak_end_date = base.Columns["peak_end_date"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnorganization = new System.Data.DataColumn("organization", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnorganization);
                this.columnSiteCode = new System.Data.DataColumn("SiteCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteCode);
                this.columnSitename = new System.Data.DataColumn("Sitename", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSitename);
                this.columnLatitude = new System.Data.DataColumn("Latitude", typeof(float), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLatitude);
                this.columnLongitude = new System.Data.DataColumn("Longitude", typeof(float), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongitude);
                this.columndatum = new System.Data.DataColumn("datum", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndatum);
                this.columnState = new System.Data.DataColumn("State", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnCounty = new System.Data.DataColumn("County", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCounty);
                this.columnusgs_Country = new System.Data.DataColumn("usgs_Country", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnusgs_Country);
                this.columnelevation_m = new System.Data.DataColumn("elevation_m", typeof(float), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnelevation_m);
                this.columnverticalDatum = new System.Data.DataColumn("verticalDatum", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnverticalDatum);
                this.columnusgs_station_type_cd = new System.Data.DataColumn("usgs_station_type_cd", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnusgs_station_type_cd);
                this.columnusgs_timeZone = new System.Data.DataColumn("usgs_timeZone", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnusgs_timeZone);
                this.columnusgs_usesDaylightSavings = new System.Data.DataColumn("usgs_usesDaylightSavings", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnusgs_usesDaylightSavings);
                this.columnVariableCode = new System.Data.DataColumn("VariableCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVariableCode);
                this.columnVariableName = new System.Data.DataColumn("VariableName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVariableName);
                this.columnVariableUnits = new System.Data.DataColumn("VariableUnits", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVariableUnits);
                this.columnpeak_count_nu = new System.Data.DataColumn("peak_count_nu", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpeak_count_nu);
                this.columnusgs_huc_cd = new System.Data.DataColumn("usgs_huc_cd", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnusgs_huc_cd);
                this.columnpeak_BeginDateTime = new System.Data.DataColumn("peak_BeginDateTime", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpeak_BeginDateTime);
                this.columnpeak_EndDateTime = new System.Data.DataColumn("peak_EndDateTime", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpeak_EndDateTime);
                this.columnpeak_begin_date = new System.Data.DataColumn("peak_begin_date", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpeak_begin_date);
                this.columnpeak_end_date = new System.Data.DataColumn("peak_end_date", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpeak_end_date);
                this.columnorganization.MaxLength = 5;
                this.columnSiteCode.MaxLength = 50;
                this.columnSitename.MaxLength = 48;
                this.columndatum.MaxLength = 10;
                this.columnState.MaxLength = 50;
                this.columnCounty.MaxLength = 50;
                this.columnusgs_Country.MaxLength = 2;
                this.columnverticalDatum.MaxLength = 50;
                this.columnusgs_station_type_cd.MaxLength = 20;
                this.columnusgs_timeZone.MaxLength = 10;
                this.columnusgs_usesDaylightSavings.MaxLength = 1;
                this.columnVariableCode.ReadOnly = true;
                this.columnVariableCode.MaxLength = 5;
                this.columnVariableName.ReadOnly = true;
                this.columnVariableName.MaxLength = 5;
                this.columnVariableUnits.ReadOnly = true;
                this.columnVariableUnits.MaxLength = 2;
                this.columnusgs_huc_cd.MaxLength = 50;
                this.columnpeak_begin_date.MaxLength = 50;
                this.columnpeak_end_date.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public peak_flatfileRow Newpeak_flatfileRow() {
                return ((peak_flatfileRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new peak_flatfileRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(peak_flatfileRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.peak_flatfileRowChanged != null)) {
                    this.peak_flatfileRowChanged(this, new peak_flatfileRowChangeEvent(((peak_flatfileRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.peak_flatfileRowChanging != null)) {
                    this.peak_flatfileRowChanging(this, new peak_flatfileRowChangeEvent(((peak_flatfileRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.peak_flatfileRowDeleted != null)) {
                    this.peak_flatfileRowDeleted(this, new peak_flatfileRowChangeEvent(((peak_flatfileRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.peak_flatfileRowDeleting != null)) {
                    this.peak_flatfileRowDeleting(this, new peak_flatfileRowChangeEvent(((peak_flatfileRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removepeak_flatfileRow(peak_flatfileRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                UsgsDbPeak ds = new UsgsDbPeak();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "peak_flatfileDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class peak_flatfileRow : System.Data.DataRow {
            
            private peak_flatfileDataTable tablepeak_flatfile;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal peak_flatfileRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepeak_flatfile = ((peak_flatfileDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string organization {
                get {
                    try {
                        return ((string)(this[this.tablepeak_flatfile.organizationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'organization\' in table \'peak_flatfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepeak_flatfile.organizationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SiteCode {
                get {
                    try {
                        return ((string)(this[this.tablepeak_flatfile.SiteCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SiteCode\' in table \'peak_flatfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepeak_flatfile.SiteCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sitename {
                get {
                    try {
                        return ((string)(this[this.tablepeak_flatfile.SitenameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Sitename\' in table \'peak_flatfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepeak_flatfile.SitenameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float Latitude {
                get {
                    try {
                        return ((float)(this[this.tablepeak_flatfile.LatitudeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Latitude\' in table \'peak_flatfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepeak_flatfile.LatitudeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float Longitude {
                get {
                    try {
                        return ((float)(this[this.tablepeak_flatfile.LongitudeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Longitude\' in table \'peak_flatfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepeak_flatfile.LongitudeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string datum {
                get {
                    try {
                        return ((string)(this[this.tablepeak_flatfile.datumColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'datum\' in table \'peak_flatfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepeak_flatfile.datumColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tablepeak_flatfile.StateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'State\' in table \'peak_flatfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepeak_flatfile.StateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string County {
                get {
                    try {
                        return ((string)(this[this.tablepeak_flatfile.CountyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'County\' in table \'peak_flatfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepeak_flatfile.CountyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string usgs_Country {
                get {
                    try {
                        return ((string)(this[this.tablepeak_flatfile.usgs_CountryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'usgs_Country\' in table \'peak_flatfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepeak_flatfile.usgs_CountryColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float elevation_m {
                get {
                    try {
                        return ((float)(this[this.tablepeak_flatfile.elevation_mColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'elevation_m\' in table \'peak_flatfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepeak_flatfile.elevation_mColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string verticalDatum {
                get {
                    try {
                        return ((string)(this[this.tablepeak_flatfile.verticalDatumColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'verticalDatum\' in table \'peak_flatfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepeak_flatfile.verticalDatumColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string usgs_station_type_cd {
                get {
                    try {
                        return ((string)(this[this.tablepeak_flatfile.usgs_station_type_cdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'usgs_station_type_cd\' in table \'peak_flatfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepeak_flatfile.usgs_station_type_cdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string usgs_timeZone {
                get {
                    try {
                        return ((string)(this[this.tablepeak_flatfile.usgs_timeZoneColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'usgs_timeZone\' in table \'peak_flatfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepeak_flatfile.usgs_timeZoneColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string usgs_usesDaylightSavings {
                get {
                    try {
                        return ((string)(this[this.tablepeak_flatfile.usgs_usesDaylightSavingsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'usgs_usesDaylightSavings\' in table \'peak_flatfile\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablepeak_flatfile.usgs_usesDaylightSavingsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VariableCode {
                get {
                    try {
                        return ((string)(this[this.tablepeak_flatfile.VariableCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VariableCode\' in table \'peak_flatfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepeak_flatfile.VariableCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VariableName {
                get {
                    try {
                        return ((string)(this[this.tablepeak_flatfile.VariableNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VariableName\' in table \'peak_flatfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepeak_flatfile.VariableNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VariableUnits {
                get {
                    try {
                        return ((string)(this[this.tablepeak_flatfile.VariableUnitsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VariableUnits\' in table \'peak_flatfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepeak_flatfile.VariableUnitsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int peak_count_nu {
                get {
                    try {
                        return ((int)(this[this.tablepeak_flatfile.peak_count_nuColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'peak_count_nu\' in table \'peak_flatfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepeak_flatfile.peak_count_nuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string usgs_huc_cd {
                get {
                    try {
                        return ((string)(this[this.tablepeak_flatfile.usgs_huc_cdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'usgs_huc_cd\' in table \'peak_flatfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepeak_flatfile.usgs_huc_cdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime peak_BeginDateTime {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablepeak_flatfile.peak_BeginDateTimeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'peak_BeginDateTime\' in table \'peak_flatfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepeak_flatfile.peak_BeginDateTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime peak_EndDateTime {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablepeak_flatfile.peak_EndDateTimeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'peak_EndDateTime\' in table \'peak_flatfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepeak_flatfile.peak_EndDateTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string peak_begin_date {
                get {
                    try {
                        return ((string)(this[this.tablepeak_flatfile.peak_begin_dateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'peak_begin_date\' in table \'peak_flatfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepeak_flatfile.peak_begin_dateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string peak_end_date {
                get {
                    try {
                        return ((string)(this[this.tablepeak_flatfile.peak_end_dateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'peak_end_date\' in table \'peak_flatfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepeak_flatfile.peak_end_dateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsorganizationNull() {
                return this.IsNull(this.tablepeak_flatfile.organizationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetorganizationNull() {
                this[this.tablepeak_flatfile.organizationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteCodeNull() {
                return this.IsNull(this.tablepeak_flatfile.SiteCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteCodeNull() {
                this[this.tablepeak_flatfile.SiteCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSitenameNull() {
                return this.IsNull(this.tablepeak_flatfile.SitenameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSitenameNull() {
                this[this.tablepeak_flatfile.SitenameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLatitudeNull() {
                return this.IsNull(this.tablepeak_flatfile.LatitudeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLatitudeNull() {
                this[this.tablepeak_flatfile.LatitudeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLongitudeNull() {
                return this.IsNull(this.tablepeak_flatfile.LongitudeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLongitudeNull() {
                this[this.tablepeak_flatfile.LongitudeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdatumNull() {
                return this.IsNull(this.tablepeak_flatfile.datumColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdatumNull() {
                this[this.tablepeak_flatfile.datumColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tablepeak_flatfile.StateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tablepeak_flatfile.StateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountyNull() {
                return this.IsNull(this.tablepeak_flatfile.CountyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountyNull() {
                this[this.tablepeak_flatfile.CountyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isusgs_CountryNull() {
                return this.IsNull(this.tablepeak_flatfile.usgs_CountryColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setusgs_CountryNull() {
                this[this.tablepeak_flatfile.usgs_CountryColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iselevation_mNull() {
                return this.IsNull(this.tablepeak_flatfile.elevation_mColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setelevation_mNull() {
                this[this.tablepeak_flatfile.elevation_mColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsverticalDatumNull() {
                return this.IsNull(this.tablepeak_flatfile.verticalDatumColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetverticalDatumNull() {
                this[this.tablepeak_flatfile.verticalDatumColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isusgs_station_type_cdNull() {
                return this.IsNull(this.tablepeak_flatfile.usgs_station_type_cdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setusgs_station_type_cdNull() {
                this[this.tablepeak_flatfile.usgs_station_type_cdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isusgs_timeZoneNull() {
                return this.IsNull(this.tablepeak_flatfile.usgs_timeZoneColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setusgs_timeZoneNull() {
                this[this.tablepeak_flatfile.usgs_timeZoneColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isusgs_usesDaylightSavingsNull() {
                return this.IsNull(this.tablepeak_flatfile.usgs_usesDaylightSavingsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setusgs_usesDaylightSavingsNull() {
                this[this.tablepeak_flatfile.usgs_usesDaylightSavingsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVariableCodeNull() {
                return this.IsNull(this.tablepeak_flatfile.VariableCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVariableCodeNull() {
                this[this.tablepeak_flatfile.VariableCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVariableNameNull() {
                return this.IsNull(this.tablepeak_flatfile.VariableNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVariableNameNull() {
                this[this.tablepeak_flatfile.VariableNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVariableUnitsNull() {
                return this.IsNull(this.tablepeak_flatfile.VariableUnitsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVariableUnitsNull() {
                this[this.tablepeak_flatfile.VariableUnitsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispeak_count_nuNull() {
                return this.IsNull(this.tablepeak_flatfile.peak_count_nuColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpeak_count_nuNull() {
                this[this.tablepeak_flatfile.peak_count_nuColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isusgs_huc_cdNull() {
                return this.IsNull(this.tablepeak_flatfile.usgs_huc_cdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setusgs_huc_cdNull() {
                this[this.tablepeak_flatfile.usgs_huc_cdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispeak_BeginDateTimeNull() {
                return this.IsNull(this.tablepeak_flatfile.peak_BeginDateTimeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpeak_BeginDateTimeNull() {
                this[this.tablepeak_flatfile.peak_BeginDateTimeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispeak_EndDateTimeNull() {
                return this.IsNull(this.tablepeak_flatfile.peak_EndDateTimeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpeak_EndDateTimeNull() {
                this[this.tablepeak_flatfile.peak_EndDateTimeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispeak_begin_dateNull() {
                return this.IsNull(this.tablepeak_flatfile.peak_begin_dateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpeak_begin_dateNull() {
                this[this.tablepeak_flatfile.peak_begin_dateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispeak_end_dateNull() {
                return this.IsNull(this.tablepeak_flatfile.peak_end_dateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpeak_end_dateNull() {
                this[this.tablepeak_flatfile.peak_end_dateColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class peak_flatfileRowChangeEvent : System.EventArgs {
            
            private peak_flatfileRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public peak_flatfileRowChangeEvent(peak_flatfileRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public peak_flatfileRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace NwisWOFService.UsgsDbPeakTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class peak_flatfileTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public peak_flatfileTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "peak_flatfile";
            tableMapping.ColumnMappings.Add("organization", "organization");
            tableMapping.ColumnMappings.Add("SiteCode", "SiteCode");
            tableMapping.ColumnMappings.Add("Sitename", "Sitename");
            tableMapping.ColumnMappings.Add("Latitude", "Latitude");
            tableMapping.ColumnMappings.Add("Longitude", "Longitude");
            tableMapping.ColumnMappings.Add("datum", "datum");
            tableMapping.ColumnMappings.Add("State", "State");
            tableMapping.ColumnMappings.Add("County", "County");
            tableMapping.ColumnMappings.Add("usgs_Country", "usgs_Country");
            tableMapping.ColumnMappings.Add("elevation_m", "elevation_m");
            tableMapping.ColumnMappings.Add("verticalDatum", "verticalDatum");
            tableMapping.ColumnMappings.Add("usgs_station_type_cd", "usgs_station_type_cd");
            tableMapping.ColumnMappings.Add("usgs_timeZone", "usgs_timeZone");
            tableMapping.ColumnMappings.Add("usgs_usesDaylightSavings", "usgs_usesDaylightSavings");
            tableMapping.ColumnMappings.Add("VariableCode", "VariableCode");
            tableMapping.ColumnMappings.Add("VariableName", "VariableName");
            tableMapping.ColumnMappings.Add("VariableUnits", "VariableUnits");
            tableMapping.ColumnMappings.Add("peak_count_nu", "peak_count_nu");
            tableMapping.ColumnMappings.Add("usgs_huc_cd", "usgs_huc_cd");
            tableMapping.ColumnMappings.Add("peak_BeginDateTime", "peak_BeginDateTime");
            tableMapping.ColumnMappings.Add("peak_EndDateTime", "peak_EndDateTime");
            tableMapping.ColumnMappings.Add("peak_begin_date", "peak_begin_date");
            tableMapping.ColumnMappings.Add("peak_end_date", "peak_end_date");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::NwisWOFService.Properties.Settings.Default.USGSSept2007ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     peak_flatfile.*\r\nFROM         peak_flatfile";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     organization, SiteCode, Sitename, Latitude, Longitude, datum, State, County, usgs_Country, elevation_m, verticalDatum, usgs_station_type_cd, 
                      usgs_timeZone, usgs_usesDaylightSavings, VariableCode, VariableName, VariableUnits, peak_count_nu, usgs_huc_cd, peak_BeginDateTime, 
                      peak_EndDateTime, peak_begin_date, peak_end_date
FROM         peak_flatfile
WHERE     (SiteCode = @siteCode)";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@siteCode", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "SiteCode", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(UsgsDbPeak.peak_flatfileDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual UsgsDbPeak.peak_flatfileDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            UsgsDbPeak.peak_flatfileDataTable dataTable = new UsgsDbPeak.peak_flatfileDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySiteCode(UsgsDbPeak.peak_flatfileDataTable dataTable, string siteCode) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((siteCode == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(siteCode));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual UsgsDbPeak.peak_flatfileDataTable GetDataBySiteCode(string siteCode) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((siteCode == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(siteCode));
            }
            UsgsDbPeak.peak_flatfileDataTable dataTable = new UsgsDbPeak.peak_flatfileDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591