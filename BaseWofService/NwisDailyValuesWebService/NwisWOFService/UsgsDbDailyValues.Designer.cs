//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace NwisWOFService {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("UsgsDbDailyValues")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class UsgsDbDailyValues : System.Data.DataSet {
        
        private sitesDataTable tablesites;
        
        private VariablesDataTable tableVariables;
        
        private seriesCatalogDataTable tableseriesCatalog;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UsgsDbDailyValues() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected UsgsDbDailyValues(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["sites"] != null)) {
                    base.Tables.Add(new sitesDataTable(ds.Tables["sites"]));
                }
                if ((ds.Tables["Variables"] != null)) {
                    base.Tables.Add(new VariablesDataTable(ds.Tables["Variables"]));
                }
                if ((ds.Tables["seriesCatalog"] != null)) {
                    base.Tables.Add(new seriesCatalogDataTable(ds.Tables["seriesCatalog"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sitesDataTable sites {
            get {
                return this.tablesites;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VariablesDataTable Variables {
            get {
                return this.tableVariables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public seriesCatalogDataTable seriesCatalog {
            get {
                return this.tableseriesCatalog;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            UsgsDbDailyValues cln = ((UsgsDbDailyValues)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["sites"] != null)) {
                    base.Tables.Add(new sitesDataTable(ds.Tables["sites"]));
                }
                if ((ds.Tables["Variables"] != null)) {
                    base.Tables.Add(new VariablesDataTable(ds.Tables["Variables"]));
                }
                if ((ds.Tables["seriesCatalog"] != null)) {
                    base.Tables.Add(new seriesCatalogDataTable(ds.Tables["seriesCatalog"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablesites = ((sitesDataTable)(base.Tables["sites"]));
            if ((initTable == true)) {
                if ((this.tablesites != null)) {
                    this.tablesites.InitVars();
                }
            }
            this.tableVariables = ((VariablesDataTable)(base.Tables["Variables"]));
            if ((initTable == true)) {
                if ((this.tableVariables != null)) {
                    this.tableVariables.InitVars();
                }
            }
            this.tableseriesCatalog = ((seriesCatalogDataTable)(base.Tables["seriesCatalog"]));
            if ((initTable == true)) {
                if ((this.tableseriesCatalog != null)) {
                    this.tableseriesCatalog.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "UsgsDbDailyValues";
            this.Prefix = "NwisWOFService";
            this.Namespace = "http://cuahsi.sdsc.edu/db/UsgsDbDailyValues.xsd";
            this.EnforceConstraints = false;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablesites = new sitesDataTable();
            base.Tables.Add(this.tablesites);
            this.tableVariables = new VariablesDataTable();
            base.Tables.Add(this.tableVariables);
            this.tableseriesCatalog = new seriesCatalogDataTable();
            base.Tables.Add(this.tableseriesCatalog);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesites() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVariables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeseriesCatalog() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            UsgsDbDailyValues ds = new UsgsDbDailyValues();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void sitesRowChangeEventHandler(object sender, sitesRowChangeEvent e);
        
        public delegate void VariablesRowChangeEventHandler(object sender, VariablesRowChangeEvent e);
        
        public delegate void seriesCatalogRowChangeEventHandler(object sender, seriesCatalogRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sitesDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSiteID;
            
            private System.Data.DataColumn columnSiteCode;
            
            private System.Data.DataColumn columnSiteName;
            
            private System.Data.DataColumn columnLatitude;
            
            private System.Data.DataColumn columnLongitude;
            
            private System.Data.DataColumn columnLatLongDatumID;
            
            private System.Data.DataColumn columnElevation_m;
            
            private System.Data.DataColumn columnVerticalDatum;
            
            private System.Data.DataColumn columnPosAccuracy_m;
            
            private System.Data.DataColumn columnCounty;
            
            private System.Data.DataColumn columnState;
            
            private System.Data.DataColumn columnComments;
            
            private System.Data.DataColumn columnusgs_State_fipCode;
            
            private System.Data.DataColumn columnUsgs_County_fipsCode;
            
            private System.Data.DataColumn columnusgs_agency;
            
            private System.Data.DataColumn columnusgs_UsesDaylightSavingsTime;
            
            private System.Data.DataColumn columnodws_timeZoneAbbreviation;
            
            private System.Data.DataColumn columnSiteVocabulary;
            
            private System.Data.DataColumn columnusgs_station_type;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sitesDataTable() {
                this.TableName = "sites";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sitesDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected sitesDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SiteIDColumn {
                get {
                    return this.columnSiteID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SiteCodeColumn {
                get {
                    return this.columnSiteCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SiteNameColumn {
                get {
                    return this.columnSiteName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LatitudeColumn {
                get {
                    return this.columnLatitude;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LongitudeColumn {
                get {
                    return this.columnLongitude;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LatLongDatumIDColumn {
                get {
                    return this.columnLatLongDatumID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Elevation_mColumn {
                get {
                    return this.columnElevation_m;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VerticalDatumColumn {
                get {
                    return this.columnVerticalDatum;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PosAccuracy_mColumn {
                get {
                    return this.columnPosAccuracy_m;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CountyColumn {
                get {
                    return this.columnCounty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn usgs_State_fipCodeColumn {
                get {
                    return this.columnusgs_State_fipCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Usgs_County_fipsCodeColumn {
                get {
                    return this.columnUsgs_County_fipsCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn usgs_agencyColumn {
                get {
                    return this.columnusgs_agency;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn usgs_UsesDaylightSavingsTimeColumn {
                get {
                    return this.columnusgs_UsesDaylightSavingsTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn odws_timeZoneAbbreviationColumn {
                get {
                    return this.columnodws_timeZoneAbbreviation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SiteVocabularyColumn {
                get {
                    return this.columnSiteVocabulary;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn usgs_station_typeColumn {
                get {
                    return this.columnusgs_station_type;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sitesRow this[int index] {
                get {
                    return ((sitesRow)(this.Rows[index]));
                }
            }
            
            public event sitesRowChangeEventHandler sitesRowChanging;
            
            public event sitesRowChangeEventHandler sitesRowChanged;
            
            public event sitesRowChangeEventHandler sitesRowDeleting;
            
            public event sitesRowChangeEventHandler sitesRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddsitesRow(sitesRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sitesRow AddsitesRow(
                        long SiteID, 
                        string SiteCode, 
                        string SiteName, 
                        float Latitude, 
                        float Longitude, 
                        int LatLongDatumID, 
                        float Elevation_m, 
                        string VerticalDatum, 
                        int PosAccuracy_m, 
                        string County, 
                        string State, 
                        int Comments, 
                        string usgs_State_fipCode, 
                        string Usgs_County_fipsCode, 
                        string usgs_agency, 
                        string usgs_UsesDaylightSavingsTime, 
                        string odws_timeZoneAbbreviation, 
                        string SiteVocabulary, 
                        string usgs_station_type) {
                sitesRow rowsitesRow = ((sitesRow)(this.NewRow()));
                rowsitesRow.ItemArray = new object[] {
                        SiteID,
                        SiteCode,
                        SiteName,
                        Latitude,
                        Longitude,
                        LatLongDatumID,
                        Elevation_m,
                        VerticalDatum,
                        PosAccuracy_m,
                        County,
                        State,
                        Comments,
                        usgs_State_fipCode,
                        Usgs_County_fipsCode,
                        usgs_agency,
                        usgs_UsesDaylightSavingsTime,
                        odws_timeZoneAbbreviation,
                        SiteVocabulary,
                        usgs_station_type};
                this.Rows.Add(rowsitesRow);
                return rowsitesRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                sitesDataTable cln = ((sitesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new sitesDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSiteID = base.Columns["SiteID"];
                this.columnSiteCode = base.Columns["SiteCode"];
                this.columnSiteName = base.Columns["SiteName"];
                this.columnLatitude = base.Columns["Latitude"];
                this.columnLongitude = base.Columns["Longitude"];
                this.columnLatLongDatumID = base.Columns["LatLongDatumID"];
                this.columnElevation_m = base.Columns["Elevation_m"];
                this.columnVerticalDatum = base.Columns["VerticalDatum"];
                this.columnPosAccuracy_m = base.Columns["PosAccuracy_m"];
                this.columnCounty = base.Columns["County"];
                this.columnState = base.Columns["State"];
                this.columnComments = base.Columns["Comments"];
                this.columnusgs_State_fipCode = base.Columns["usgs_State_fipCode"];
                this.columnUsgs_County_fipsCode = base.Columns["Usgs_County_fipsCode"];
                this.columnusgs_agency = base.Columns["usgs_agency"];
                this.columnusgs_UsesDaylightSavingsTime = base.Columns["usgs_UsesDaylightSavingsTime"];
                this.columnodws_timeZoneAbbreviation = base.Columns["odws_timeZoneAbbreviation"];
                this.columnSiteVocabulary = base.Columns["SiteVocabulary"];
                this.columnusgs_station_type = base.Columns["usgs_station_type"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSiteID = new System.Data.DataColumn("SiteID", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteID);
                this.columnSiteCode = new System.Data.DataColumn("SiteCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteCode);
                this.columnSiteName = new System.Data.DataColumn("SiteName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteName);
                this.columnLatitude = new System.Data.DataColumn("Latitude", typeof(float), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLatitude);
                this.columnLongitude = new System.Data.DataColumn("Longitude", typeof(float), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongitude);
                this.columnLatLongDatumID = new System.Data.DataColumn("LatLongDatumID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLatLongDatumID);
                this.columnElevation_m = new System.Data.DataColumn("Elevation_m", typeof(float), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnElevation_m);
                this.columnVerticalDatum = new System.Data.DataColumn("VerticalDatum", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerticalDatum);
                this.columnPosAccuracy_m = new System.Data.DataColumn("PosAccuracy_m", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosAccuracy_m);
                this.columnCounty = new System.Data.DataColumn("County", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCounty);
                this.columnState = new System.Data.DataColumn("State", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnComments = new System.Data.DataColumn("Comments", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnusgs_State_fipCode = new System.Data.DataColumn("usgs_State_fipCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnusgs_State_fipCode);
                this.columnUsgs_County_fipsCode = new System.Data.DataColumn("Usgs_County_fipsCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsgs_County_fipsCode);
                this.columnusgs_agency = new System.Data.DataColumn("usgs_agency", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnusgs_agency);
                this.columnusgs_UsesDaylightSavingsTime = new System.Data.DataColumn("usgs_UsesDaylightSavingsTime", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnusgs_UsesDaylightSavingsTime);
                this.columnodws_timeZoneAbbreviation = new System.Data.DataColumn("odws_timeZoneAbbreviation", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnodws_timeZoneAbbreviation);
                this.columnSiteVocabulary = new System.Data.DataColumn("SiteVocabulary", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteVocabulary);
                this.columnusgs_station_type = new System.Data.DataColumn("usgs_station_type", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnusgs_station_type);
                this.columnSiteCode.MaxLength = 50;
                this.columnSiteName.MaxLength = 48;
                this.columnVerticalDatum.MaxLength = 50;
                this.columnPosAccuracy_m.ReadOnly = true;
                this.columnCounty.MaxLength = 252;
                this.columnState.MaxLength = 2;
                this.columnComments.ReadOnly = true;
                this.columnusgs_State_fipCode.MaxLength = 50;
                this.columnUsgs_County_fipsCode.MaxLength = 50;
                this.columnusgs_agency.MaxLength = 5;
                this.columnusgs_UsesDaylightSavingsTime.MaxLength = 1;
                this.columnodws_timeZoneAbbreviation.MaxLength = 10;
                this.columnSiteVocabulary.ReadOnly = true;
                this.columnSiteVocabulary.MaxLength = 4;
                this.columnusgs_station_type.MaxLength = 255;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sitesRow NewsitesRow() {
                return ((sitesRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new sitesRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(sitesRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sitesRowChanged != null)) {
                    this.sitesRowChanged(this, new sitesRowChangeEvent(((sitesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sitesRowChanging != null)) {
                    this.sitesRowChanging(this, new sitesRowChangeEvent(((sitesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sitesRowDeleted != null)) {
                    this.sitesRowDeleted(this, new sitesRowChangeEvent(((sitesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sitesRowDeleting != null)) {
                    this.sitesRowDeleting(this, new sitesRowChangeEvent(((sitesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovesitesRow(sitesRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                UsgsDbDailyValues ds = new UsgsDbDailyValues();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sitesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VariablesDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnVariableID;
            
            private System.Data.DataColumn columnVariableCode;
            
            private System.Data.DataColumn columnVariableName;
            
            private System.Data.DataColumn columnSampleMedium;
            
            private System.Data.DataColumn columnValueType;
            
            private System.Data.DataColumn columnisRegular;
            
            private System.Data.DataColumn columnTimeSupport;
            
            private System.Data.DataColumn columnTimeUnitsID;
            
            private System.Data.DataColumn columnGeneralCategory;
            
            private System.Data.DataColumn columnNoDataValue;
            
            private System.Data.DataColumn columnnetworkId;
            
            private System.Data.DataColumn columnVariableUnitsID;
            
            private System.Data.DataColumn columnmediumCode;
            
            private System.Data.DataColumn columnUnits;
            
            private System.Data.DataColumn columnUnitType;
            
            private System.Data.DataColumn columnUnitAbbreviation;
            
            private System.Data.DataColumn columnDataType;
            
            private System.Data.DataColumn columnstat_cd;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VariablesDataTable() {
                this.TableName = "Variables";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VariablesDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected VariablesDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VariableIDColumn {
                get {
                    return this.columnVariableID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VariableCodeColumn {
                get {
                    return this.columnVariableCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VariableNameColumn {
                get {
                    return this.columnVariableName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SampleMediumColumn {
                get {
                    return this.columnSampleMedium;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ValueTypeColumn {
                get {
                    return this.columnValueType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn isRegularColumn {
                get {
                    return this.columnisRegular;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TimeSupportColumn {
                get {
                    return this.columnTimeSupport;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TimeUnitsIDColumn {
                get {
                    return this.columnTimeUnitsID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GeneralCategoryColumn {
                get {
                    return this.columnGeneralCategory;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NoDataValueColumn {
                get {
                    return this.columnNoDataValue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn networkIdColumn {
                get {
                    return this.columnnetworkId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VariableUnitsIDColumn {
                get {
                    return this.columnVariableUnitsID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn mediumCodeColumn {
                get {
                    return this.columnmediumCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UnitsColumn {
                get {
                    return this.columnUnits;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UnitTypeColumn {
                get {
                    return this.columnUnitType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UnitAbbreviationColumn {
                get {
                    return this.columnUnitAbbreviation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DataTypeColumn {
                get {
                    return this.columnDataType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn stat_cdColumn {
                get {
                    return this.columnstat_cd;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VariablesRow this[int index] {
                get {
                    return ((VariablesRow)(this.Rows[index]));
                }
            }
            
            public event VariablesRowChangeEventHandler VariablesRowChanging;
            
            public event VariablesRowChangeEventHandler VariablesRowChanged;
            
            public event VariablesRowChangeEventHandler VariablesRowDeleting;
            
            public event VariablesRowChangeEventHandler VariablesRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVariablesRow(VariablesRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VariablesRow AddVariablesRow(
                        int VariableID, 
                        string VariableCode, 
                        string VariableName, 
                        string SampleMedium, 
                        string ValueType, 
                        bool isRegular, 
                        string TimeSupport, 
                        string TimeUnitsID, 
                        string GeneralCategory, 
                        double NoDataValue, 
                        int networkId, 
                        int VariableUnitsID, 
                        string mediumCode, 
                        string Units, 
                        string UnitType, 
                        string UnitAbbreviation, 
                        string DataType, 
                        string stat_cd) {
                VariablesRow rowVariablesRow = ((VariablesRow)(this.NewRow()));
                rowVariablesRow.ItemArray = new object[] {
                        VariableID,
                        VariableCode,
                        VariableName,
                        SampleMedium,
                        ValueType,
                        isRegular,
                        TimeSupport,
                        TimeUnitsID,
                        GeneralCategory,
                        NoDataValue,
                        networkId,
                        VariableUnitsID,
                        mediumCode,
                        Units,
                        UnitType,
                        UnitAbbreviation,
                        DataType,
                        stat_cd};
                this.Rows.Add(rowVariablesRow);
                return rowVariablesRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                VariablesDataTable cln = ((VariablesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new VariablesDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVariableID = base.Columns["VariableID"];
                this.columnVariableCode = base.Columns["VariableCode"];
                this.columnVariableName = base.Columns["VariableName"];
                this.columnSampleMedium = base.Columns["SampleMedium"];
                this.columnValueType = base.Columns["ValueType"];
                this.columnisRegular = base.Columns["isRegular"];
                this.columnTimeSupport = base.Columns["TimeSupport"];
                this.columnTimeUnitsID = base.Columns["TimeUnitsID"];
                this.columnGeneralCategory = base.Columns["GeneralCategory"];
                this.columnNoDataValue = base.Columns["NoDataValue"];
                this.columnnetworkId = base.Columns["networkId"];
                this.columnVariableUnitsID = base.Columns["VariableUnitsID"];
                this.columnmediumCode = base.Columns["mediumCode"];
                this.columnUnits = base.Columns["Units"];
                this.columnUnitType = base.Columns["UnitType"];
                this.columnUnitAbbreviation = base.Columns["UnitAbbreviation"];
                this.columnDataType = base.Columns["DataType"];
                this.columnstat_cd = base.Columns["stat_cd"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVariableID = new System.Data.DataColumn("VariableID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVariableID);
                this.columnVariableCode = new System.Data.DataColumn("VariableCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVariableCode);
                this.columnVariableName = new System.Data.DataColumn("VariableName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVariableName);
                this.columnSampleMedium = new System.Data.DataColumn("SampleMedium", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleMedium);
                this.columnValueType = new System.Data.DataColumn("ValueType", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueType);
                this.columnisRegular = new System.Data.DataColumn("isRegular", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnisRegular);
                this.columnTimeSupport = new System.Data.DataColumn("TimeSupport", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeSupport);
                this.columnTimeUnitsID = new System.Data.DataColumn("TimeUnitsID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeUnitsID);
                this.columnGeneralCategory = new System.Data.DataColumn("GeneralCategory", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralCategory);
                this.columnNoDataValue = new System.Data.DataColumn("NoDataValue", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoDataValue);
                this.columnnetworkId = new System.Data.DataColumn("networkId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnetworkId);
                this.columnVariableUnitsID = new System.Data.DataColumn("VariableUnitsID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVariableUnitsID);
                this.columnmediumCode = new System.Data.DataColumn("mediumCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmediumCode);
                this.columnUnits = new System.Data.DataColumn("Units", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnits);
                this.columnUnitType = new System.Data.DataColumn("UnitType", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitType);
                this.columnUnitAbbreviation = new System.Data.DataColumn("UnitAbbreviation", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitAbbreviation);
                this.columnDataType = new System.Data.DataColumn("DataType", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataType);
                this.columnstat_cd = new System.Data.DataColumn("stat_cd", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstat_cd);
                this.columnVariableID.AllowDBNull = false;
                this.columnVariableCode.MaxLength = 50;
                this.columnVariableName.MaxLength = 200;
                this.columnSampleMedium.MaxLength = 50;
                this.columnValueType.ReadOnly = true;
                this.columnValueType.MaxLength = 17;
                this.columnisRegular.ReadOnly = true;
                this.columnTimeSupport.ReadOnly = true;
                this.columnTimeSupport.MaxLength = 1;
                this.columnTimeUnitsID.ReadOnly = true;
                this.columnTimeUnitsID.MaxLength = 3;
                this.columnGeneralCategory.MaxLength = 50;
                this.columnmediumCode.MaxLength = 10;
                this.columnUnits.MaxLength = 50;
                this.columnUnitType.MaxLength = 50;
                this.columnUnitAbbreviation.MaxLength = 50;
                this.columnDataType.MaxLength = 50;
                this.columnstat_cd.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VariablesRow NewVariablesRow() {
                return ((VariablesRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new VariablesRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(VariablesRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VariablesRowChanged != null)) {
                    this.VariablesRowChanged(this, new VariablesRowChangeEvent(((VariablesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VariablesRowChanging != null)) {
                    this.VariablesRowChanging(this, new VariablesRowChangeEvent(((VariablesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VariablesRowDeleted != null)) {
                    this.VariablesRowDeleted(this, new VariablesRowChangeEvent(((VariablesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VariablesRowDeleting != null)) {
                    this.VariablesRowDeleting(this, new VariablesRowChangeEvent(((VariablesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVariablesRow(VariablesRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                UsgsDbDailyValues ds = new UsgsDbDailyValues();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VariablesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class seriesCatalogDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnsiteID;
            
            private System.Data.DataColumn columnSiteCode;
            
            private System.Data.DataColumn columnsiteName;
            
            private System.Data.DataColumn columnVariableCode;
            
            private System.Data.DataColumn columnVariableName;
            
            private System.Data.DataColumn columnVariableUnitsName;
            
            private System.Data.DataColumn columnVariableUnitsID;
            
            private System.Data.DataColumn columnSampleMedium;
            
            private System.Data.DataColumn columnValueType;
            
            private System.Data.DataColumn columnTimeSupport;
            
            private System.Data.DataColumn columnTimeUnitsID;
            
            private System.Data.DataColumn columnTimeUnitsName;
            
            private System.Data.DataColumn columnGeneralCategory;
            
            private System.Data.DataColumn columnMethodID;
            
            private System.Data.DataColumn columnMethodName;
            
            private System.Data.DataColumn columnSourceID;
            
            private System.Data.DataColumn columnOrganization;
            
            private System.Data.DataColumn columnSourceDescription;
            
            private System.Data.DataColumn columnQualityControlLevelID;
            
            private System.Data.DataColumn columnBeginDateTime;
            
            private System.Data.DataColumn columnEndDateTime;
            
            private System.Data.DataColumn columnValueCount;
            
            private System.Data.DataColumn columnDataType;
            
            private System.Data.DataColumn columnmediumCode;
            
            private System.Data.DataColumn columnusgs_stat_cd;
            
            private System.Data.DataColumn columnVariableUnitsAbbreviation;
            
            private System.Data.DataColumn columnusgs_agency;
            
            private System.Data.DataColumn columnisRegular;
            
            private System.Data.DataColumn columnNoDataValue;
            
            private System.Data.DataColumn columnVariableVocabulary;
            
            private System.Data.DataColumn columnSiteVocabulary;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public seriesCatalogDataTable() {
                this.TableName = "seriesCatalog";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal seriesCatalogDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected seriesCatalogDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn siteIDColumn {
                get {
                    return this.columnsiteID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SiteCodeColumn {
                get {
                    return this.columnSiteCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn siteNameColumn {
                get {
                    return this.columnsiteName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VariableCodeColumn {
                get {
                    return this.columnVariableCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VariableNameColumn {
                get {
                    return this.columnVariableName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VariableUnitsNameColumn {
                get {
                    return this.columnVariableUnitsName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VariableUnitsIDColumn {
                get {
                    return this.columnVariableUnitsID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SampleMediumColumn {
                get {
                    return this.columnSampleMedium;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ValueTypeColumn {
                get {
                    return this.columnValueType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TimeSupportColumn {
                get {
                    return this.columnTimeSupport;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TimeUnitsIDColumn {
                get {
                    return this.columnTimeUnitsID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TimeUnitsNameColumn {
                get {
                    return this.columnTimeUnitsName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GeneralCategoryColumn {
                get {
                    return this.columnGeneralCategory;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MethodIDColumn {
                get {
                    return this.columnMethodID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MethodNameColumn {
                get {
                    return this.columnMethodName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SourceIDColumn {
                get {
                    return this.columnSourceID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OrganizationColumn {
                get {
                    return this.columnOrganization;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SourceDescriptionColumn {
                get {
                    return this.columnSourceDescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QualityControlLevelIDColumn {
                get {
                    return this.columnQualityControlLevelID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BeginDateTimeColumn {
                get {
                    return this.columnBeginDateTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EndDateTimeColumn {
                get {
                    return this.columnEndDateTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ValueCountColumn {
                get {
                    return this.columnValueCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DataTypeColumn {
                get {
                    return this.columnDataType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn mediumCodeColumn {
                get {
                    return this.columnmediumCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn usgs_stat_cdColumn {
                get {
                    return this.columnusgs_stat_cd;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VariableUnitsAbbreviationColumn {
                get {
                    return this.columnVariableUnitsAbbreviation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn usgs_agencyColumn {
                get {
                    return this.columnusgs_agency;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn isRegularColumn {
                get {
                    return this.columnisRegular;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NoDataValueColumn {
                get {
                    return this.columnNoDataValue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VariableVocabularyColumn {
                get {
                    return this.columnVariableVocabulary;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SiteVocabularyColumn {
                get {
                    return this.columnSiteVocabulary;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public seriesCatalogRow this[int index] {
                get {
                    return ((seriesCatalogRow)(this.Rows[index]));
                }
            }
            
            public event seriesCatalogRowChangeEventHandler seriesCatalogRowChanging;
            
            public event seriesCatalogRowChangeEventHandler seriesCatalogRowChanged;
            
            public event seriesCatalogRowChangeEventHandler seriesCatalogRowDeleting;
            
            public event seriesCatalogRowChangeEventHandler seriesCatalogRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddseriesCatalogRow(seriesCatalogRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public seriesCatalogRow AddseriesCatalogRow(
                        long siteID, 
                        string SiteCode, 
                        string siteName, 
                        string VariableCode, 
                        string VariableName, 
                        string VariableUnitsName, 
                        int VariableUnitsID, 
                        string SampleMedium, 
                        string ValueType, 
                        int TimeSupport, 
                        int TimeUnitsID, 
                        string TimeUnitsName, 
                        string GeneralCategory, 
                        int MethodID, 
                        string MethodName, 
                        int SourceID, 
                        string Organization, 
                        string SourceDescription, 
                        int QualityControlLevelID, 
                        System.DateTime BeginDateTime, 
                        System.DateTime EndDateTime, 
                        string ValueCount, 
                        string DataType, 
                        string mediumCode, 
                        string usgs_stat_cd, 
                        string VariableUnitsAbbreviation, 
                        string usgs_agency, 
                        bool isRegular, 
                        double NoDataValue, 
                        string VariableVocabulary, 
                        string SiteVocabulary) {
                seriesCatalogRow rowseriesCatalogRow = ((seriesCatalogRow)(this.NewRow()));
                rowseriesCatalogRow.ItemArray = new object[] {
                        siteID,
                        SiteCode,
                        siteName,
                        VariableCode,
                        VariableName,
                        VariableUnitsName,
                        VariableUnitsID,
                        SampleMedium,
                        ValueType,
                        TimeSupport,
                        TimeUnitsID,
                        TimeUnitsName,
                        GeneralCategory,
                        MethodID,
                        MethodName,
                        SourceID,
                        Organization,
                        SourceDescription,
                        QualityControlLevelID,
                        BeginDateTime,
                        EndDateTime,
                        ValueCount,
                        DataType,
                        mediumCode,
                        usgs_stat_cd,
                        VariableUnitsAbbreviation,
                        usgs_agency,
                        isRegular,
                        NoDataValue,
                        VariableVocabulary,
                        SiteVocabulary};
                this.Rows.Add(rowseriesCatalogRow);
                return rowseriesCatalogRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                seriesCatalogDataTable cln = ((seriesCatalogDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new seriesCatalogDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnsiteID = base.Columns["siteID"];
                this.columnSiteCode = base.Columns["SiteCode"];
                this.columnsiteName = base.Columns["siteName"];
                this.columnVariableCode = base.Columns["VariableCode"];
                this.columnVariableName = base.Columns["VariableName"];
                this.columnVariableUnitsName = base.Columns["VariableUnitsName"];
                this.columnVariableUnitsID = base.Columns["VariableUnitsID"];
                this.columnSampleMedium = base.Columns["SampleMedium"];
                this.columnValueType = base.Columns["ValueType"];
                this.columnTimeSupport = base.Columns["TimeSupport"];
                this.columnTimeUnitsID = base.Columns["TimeUnitsID"];
                this.columnTimeUnitsName = base.Columns["TimeUnitsName"];
                this.columnGeneralCategory = base.Columns["GeneralCategory"];
                this.columnMethodID = base.Columns["MethodID"];
                this.columnMethodName = base.Columns["MethodName"];
                this.columnSourceID = base.Columns["SourceID"];
                this.columnOrganization = base.Columns["Organization"];
                this.columnSourceDescription = base.Columns["SourceDescription"];
                this.columnQualityControlLevelID = base.Columns["QualityControlLevelID"];
                this.columnBeginDateTime = base.Columns["BeginDateTime"];
                this.columnEndDateTime = base.Columns["EndDateTime"];
                this.columnValueCount = base.Columns["ValueCount"];
                this.columnDataType = base.Columns["DataType"];
                this.columnmediumCode = base.Columns["mediumCode"];
                this.columnusgs_stat_cd = base.Columns["usgs_stat_cd"];
                this.columnVariableUnitsAbbreviation = base.Columns["VariableUnitsAbbreviation"];
                this.columnusgs_agency = base.Columns["usgs_agency"];
                this.columnisRegular = base.Columns["isRegular"];
                this.columnNoDataValue = base.Columns["NoDataValue"];
                this.columnVariableVocabulary = base.Columns["VariableVocabulary"];
                this.columnSiteVocabulary = base.Columns["SiteVocabulary"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnsiteID = new System.Data.DataColumn("siteID", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsiteID);
                this.columnSiteCode = new System.Data.DataColumn("SiteCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteCode);
                this.columnsiteName = new System.Data.DataColumn("siteName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsiteName);
                this.columnVariableCode = new System.Data.DataColumn("VariableCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVariableCode);
                this.columnVariableName = new System.Data.DataColumn("VariableName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVariableName);
                this.columnVariableUnitsName = new System.Data.DataColumn("VariableUnitsName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVariableUnitsName);
                this.columnVariableUnitsID = new System.Data.DataColumn("VariableUnitsID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVariableUnitsID);
                this.columnSampleMedium = new System.Data.DataColumn("SampleMedium", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleMedium);
                this.columnValueType = new System.Data.DataColumn("ValueType", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueType);
                this.columnTimeSupport = new System.Data.DataColumn("TimeSupport", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeSupport);
                this.columnTimeUnitsID = new System.Data.DataColumn("TimeUnitsID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeUnitsID);
                this.columnTimeUnitsName = new System.Data.DataColumn("TimeUnitsName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeUnitsName);
                this.columnGeneralCategory = new System.Data.DataColumn("GeneralCategory", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralCategory);
                this.columnMethodID = new System.Data.DataColumn("MethodID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethodID);
                this.columnMethodName = new System.Data.DataColumn("MethodName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethodName);
                this.columnSourceID = new System.Data.DataColumn("SourceID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourceID);
                this.columnOrganization = new System.Data.DataColumn("Organization", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrganization);
                this.columnSourceDescription = new System.Data.DataColumn("SourceDescription", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourceDescription);
                this.columnQualityControlLevelID = new System.Data.DataColumn("QualityControlLevelID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQualityControlLevelID);
                this.columnBeginDateTime = new System.Data.DataColumn("BeginDateTime", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeginDateTime);
                this.columnEndDateTime = new System.Data.DataColumn("EndDateTime", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndDateTime);
                this.columnValueCount = new System.Data.DataColumn("ValueCount", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueCount);
                this.columnDataType = new System.Data.DataColumn("DataType", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataType);
                this.columnmediumCode = new System.Data.DataColumn("mediumCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmediumCode);
                this.columnusgs_stat_cd = new System.Data.DataColumn("usgs_stat_cd", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnusgs_stat_cd);
                this.columnVariableUnitsAbbreviation = new System.Data.DataColumn("VariableUnitsAbbreviation", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVariableUnitsAbbreviation);
                this.columnusgs_agency = new System.Data.DataColumn("usgs_agency", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnusgs_agency);
                this.columnisRegular = new System.Data.DataColumn("isRegular", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnisRegular);
                this.columnNoDataValue = new System.Data.DataColumn("NoDataValue", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoDataValue);
                this.columnVariableVocabulary = new System.Data.DataColumn("VariableVocabulary", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVariableVocabulary);
                this.columnSiteVocabulary = new System.Data.DataColumn("SiteVocabulary", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteVocabulary);
                this.columnSiteCode.MaxLength = 50;
                this.columnsiteName.MaxLength = 48;
                this.columnVariableCode.MaxLength = 50;
                this.columnVariableName.MaxLength = 200;
                this.columnVariableUnitsName.MaxLength = 50;
                this.columnSampleMedium.MaxLength = 50;
                this.columnValueType.MaxLength = 50;
                this.columnTimeSupport.ReadOnly = true;
                this.columnTimeUnitsID.ReadOnly = true;
                this.columnTimeUnitsName.ReadOnly = true;
                this.columnTimeUnitsName.MaxLength = 3;
                this.columnGeneralCategory.MaxLength = 50;
                this.columnMethodID.ReadOnly = true;
                this.columnMethodName.ReadOnly = true;
                this.columnSourceID.ReadOnly = true;
                this.columnOrganization.ReadOnly = true;
                this.columnOrganization.MaxLength = 4;
                this.columnSourceDescription.ReadOnly = true;
                this.columnSourceDescription.MaxLength = 9;
                this.columnQualityControlLevelID.ReadOnly = true;
                this.columnValueCount.MaxLength = 50;
                this.columnDataType.MaxLength = 100;
                this.columnmediumCode.MaxLength = 10;
                this.columnusgs_stat_cd.MaxLength = 50;
                this.columnVariableUnitsAbbreviation.MaxLength = 50;
                this.columnusgs_agency.MaxLength = 5;
                this.columnisRegular.ReadOnly = true;
                this.columnVariableVocabulary.ReadOnly = true;
                this.columnVariableVocabulary.MaxLength = 4;
                this.columnSiteVocabulary.ReadOnly = true;
                this.columnSiteVocabulary.MaxLength = 4;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public seriesCatalogRow NewseriesCatalogRow() {
                return ((seriesCatalogRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new seriesCatalogRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(seriesCatalogRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.seriesCatalogRowChanged != null)) {
                    this.seriesCatalogRowChanged(this, new seriesCatalogRowChangeEvent(((seriesCatalogRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.seriesCatalogRowChanging != null)) {
                    this.seriesCatalogRowChanging(this, new seriesCatalogRowChangeEvent(((seriesCatalogRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.seriesCatalogRowDeleted != null)) {
                    this.seriesCatalogRowDeleted(this, new seriesCatalogRowChangeEvent(((seriesCatalogRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.seriesCatalogRowDeleting != null)) {
                    this.seriesCatalogRowDeleting(this, new seriesCatalogRowChangeEvent(((seriesCatalogRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveseriesCatalogRow(seriesCatalogRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                UsgsDbDailyValues ds = new UsgsDbDailyValues();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "seriesCatalogDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class sitesRow : System.Data.DataRow {
            
            private sitesDataTable tablesites;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sitesRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesites = ((sitesDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SiteID {
                get {
                    try {
                        return ((long)(this[this.tablesites.SiteIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SiteID\' in table \'sites\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesites.SiteIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SiteCode {
                get {
                    try {
                        return ((string)(this[this.tablesites.SiteCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SiteCode\' in table \'sites\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesites.SiteCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SiteName {
                get {
                    try {
                        return ((string)(this[this.tablesites.SiteNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SiteName\' in table \'sites\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesites.SiteNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float Latitude {
                get {
                    try {
                        return ((float)(this[this.tablesites.LatitudeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Latitude\' in table \'sites\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesites.LatitudeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float Longitude {
                get {
                    try {
                        return ((float)(this[this.tablesites.LongitudeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Longitude\' in table \'sites\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesites.LongitudeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LatLongDatumID {
                get {
                    try {
                        return ((int)(this[this.tablesites.LatLongDatumIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LatLongDatumID\' in table \'sites\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesites.LatLongDatumIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float Elevation_m {
                get {
                    try {
                        return ((float)(this[this.tablesites.Elevation_mColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Elevation_m\' in table \'sites\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesites.Elevation_mColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VerticalDatum {
                get {
                    try {
                        return ((string)(this[this.tablesites.VerticalDatumColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VerticalDatum\' in table \'sites\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesites.VerticalDatumColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PosAccuracy_m {
                get {
                    try {
                        return ((int)(this[this.tablesites.PosAccuracy_mColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PosAccuracy_m\' in table \'sites\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesites.PosAccuracy_mColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string County {
                get {
                    try {
                        return ((string)(this[this.tablesites.CountyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'County\' in table \'sites\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesites.CountyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tablesites.StateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'State\' in table \'sites\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesites.StateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Comments {
                get {
                    try {
                        return ((int)(this[this.tablesites.CommentsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Comments\' in table \'sites\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesites.CommentsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string usgs_State_fipCode {
                get {
                    try {
                        return ((string)(this[this.tablesites.usgs_State_fipCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'usgs_State_fipCode\' in table \'sites\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesites.usgs_State_fipCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Usgs_County_fipsCode {
                get {
                    try {
                        return ((string)(this[this.tablesites.Usgs_County_fipsCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Usgs_County_fipsCode\' in table \'sites\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesites.Usgs_County_fipsCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string usgs_agency {
                get {
                    try {
                        return ((string)(this[this.tablesites.usgs_agencyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'usgs_agency\' in table \'sites\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesites.usgs_agencyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string usgs_UsesDaylightSavingsTime {
                get {
                    try {
                        return ((string)(this[this.tablesites.usgs_UsesDaylightSavingsTimeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'usgs_UsesDaylightSavingsTime\' in table \'sites\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesites.usgs_UsesDaylightSavingsTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string odws_timeZoneAbbreviation {
                get {
                    try {
                        return ((string)(this[this.tablesites.odws_timeZoneAbbreviationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'odws_timeZoneAbbreviation\' in table \'sites\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesites.odws_timeZoneAbbreviationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SiteVocabulary {
                get {
                    try {
                        return ((string)(this[this.tablesites.SiteVocabularyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SiteVocabulary\' in table \'sites\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesites.SiteVocabularyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string usgs_station_type {
                get {
                    try {
                        return ((string)(this[this.tablesites.usgs_station_typeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'usgs_station_type\' in table \'sites\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesites.usgs_station_typeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteIDNull() {
                return this.IsNull(this.tablesites.SiteIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteIDNull() {
                this[this.tablesites.SiteIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteCodeNull() {
                return this.IsNull(this.tablesites.SiteCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteCodeNull() {
                this[this.tablesites.SiteCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteNameNull() {
                return this.IsNull(this.tablesites.SiteNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteNameNull() {
                this[this.tablesites.SiteNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLatitudeNull() {
                return this.IsNull(this.tablesites.LatitudeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLatitudeNull() {
                this[this.tablesites.LatitudeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLongitudeNull() {
                return this.IsNull(this.tablesites.LongitudeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLongitudeNull() {
                this[this.tablesites.LongitudeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLatLongDatumIDNull() {
                return this.IsNull(this.tablesites.LatLongDatumIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLatLongDatumIDNull() {
                this[this.tablesites.LatLongDatumIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsElevation_mNull() {
                return this.IsNull(this.tablesites.Elevation_mColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetElevation_mNull() {
                this[this.tablesites.Elevation_mColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVerticalDatumNull() {
                return this.IsNull(this.tablesites.VerticalDatumColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVerticalDatumNull() {
                this[this.tablesites.VerticalDatumColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosAccuracy_mNull() {
                return this.IsNull(this.tablesites.PosAccuracy_mColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosAccuracy_mNull() {
                this[this.tablesites.PosAccuracy_mColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountyNull() {
                return this.IsNull(this.tablesites.CountyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountyNull() {
                this[this.tablesites.CountyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tablesites.StateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tablesites.StateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tablesites.CommentsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tablesites.CommentsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isusgs_State_fipCodeNull() {
                return this.IsNull(this.tablesites.usgs_State_fipCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setusgs_State_fipCodeNull() {
                this[this.tablesites.usgs_State_fipCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsgs_County_fipsCodeNull() {
                return this.IsNull(this.tablesites.Usgs_County_fipsCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsgs_County_fipsCodeNull() {
                this[this.tablesites.Usgs_County_fipsCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isusgs_agencyNull() {
                return this.IsNull(this.tablesites.usgs_agencyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setusgs_agencyNull() {
                this[this.tablesites.usgs_agencyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isusgs_UsesDaylightSavingsTimeNull() {
                return this.IsNull(this.tablesites.usgs_UsesDaylightSavingsTimeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setusgs_UsesDaylightSavingsTimeNull() {
                this[this.tablesites.usgs_UsesDaylightSavingsTimeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isodws_timeZoneAbbreviationNull() {
                return this.IsNull(this.tablesites.odws_timeZoneAbbreviationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setodws_timeZoneAbbreviationNull() {
                this[this.tablesites.odws_timeZoneAbbreviationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteVocabularyNull() {
                return this.IsNull(this.tablesites.SiteVocabularyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteVocabularyNull() {
                this[this.tablesites.SiteVocabularyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isusgs_station_typeNull() {
                return this.IsNull(this.tablesites.usgs_station_typeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setusgs_station_typeNull() {
                this[this.tablesites.usgs_station_typeColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class VariablesRow : System.Data.DataRow {
            
            private VariablesDataTable tableVariables;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VariablesRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVariables = ((VariablesDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int VariableID {
                get {
                    return ((int)(this[this.tableVariables.VariableIDColumn]));
                }
                set {
                    this[this.tableVariables.VariableIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VariableCode {
                get {
                    try {
                        return ((string)(this[this.tableVariables.VariableCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VariableCode\' in table \'Variables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVariables.VariableCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VariableName {
                get {
                    try {
                        return ((string)(this[this.tableVariables.VariableNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VariableName\' in table \'Variables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVariables.VariableNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SampleMedium {
                get {
                    try {
                        return ((string)(this[this.tableVariables.SampleMediumColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SampleMedium\' in table \'Variables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVariables.SampleMediumColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueType {
                get {
                    try {
                        return ((string)(this[this.tableVariables.ValueTypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ValueType\' in table \'Variables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVariables.ValueTypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isRegular {
                get {
                    try {
                        return ((bool)(this[this.tableVariables.isRegularColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'isRegular\' in table \'Variables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVariables.isRegularColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TimeSupport {
                get {
                    try {
                        return ((string)(this[this.tableVariables.TimeSupportColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TimeSupport\' in table \'Variables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVariables.TimeSupportColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TimeUnitsID {
                get {
                    try {
                        return ((string)(this[this.tableVariables.TimeUnitsIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TimeUnitsID\' in table \'Variables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVariables.TimeUnitsIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GeneralCategory {
                get {
                    try {
                        return ((string)(this[this.tableVariables.GeneralCategoryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GeneralCategory\' in table \'Variables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVariables.GeneralCategoryColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NoDataValue {
                get {
                    try {
                        return ((double)(this[this.tableVariables.NoDataValueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NoDataValue\' in table \'Variables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVariables.NoDataValueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int networkId {
                get {
                    try {
                        return ((int)(this[this.tableVariables.networkIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'networkId\' in table \'Variables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVariables.networkIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int VariableUnitsID {
                get {
                    try {
                        return ((int)(this[this.tableVariables.VariableUnitsIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VariableUnitsID\' in table \'Variables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVariables.VariableUnitsIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mediumCode {
                get {
                    try {
                        return ((string)(this[this.tableVariables.mediumCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'mediumCode\' in table \'Variables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVariables.mediumCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Units {
                get {
                    try {
                        return ((string)(this[this.tableVariables.UnitsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Units\' in table \'Variables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVariables.UnitsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitType {
                get {
                    try {
                        return ((string)(this[this.tableVariables.UnitTypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'UnitType\' in table \'Variables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVariables.UnitTypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitAbbreviation {
                get {
                    try {
                        return ((string)(this[this.tableVariables.UnitAbbreviationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'UnitAbbreviation\' in table \'Variables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVariables.UnitAbbreviationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataType {
                get {
                    try {
                        return ((string)(this[this.tableVariables.DataTypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DataType\' in table \'Variables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVariables.DataTypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stat_cd {
                get {
                    try {
                        return ((string)(this[this.tableVariables.stat_cdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'stat_cd\' in table \'Variables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVariables.stat_cdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVariableCodeNull() {
                return this.IsNull(this.tableVariables.VariableCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVariableCodeNull() {
                this[this.tableVariables.VariableCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVariableNameNull() {
                return this.IsNull(this.tableVariables.VariableNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVariableNameNull() {
                this[this.tableVariables.VariableNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSampleMediumNull() {
                return this.IsNull(this.tableVariables.SampleMediumColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSampleMediumNull() {
                this[this.tableVariables.SampleMediumColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueTypeNull() {
                return this.IsNull(this.tableVariables.ValueTypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueTypeNull() {
                this[this.tableVariables.ValueTypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisRegularNull() {
                return this.IsNull(this.tableVariables.isRegularColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisRegularNull() {
                this[this.tableVariables.isRegularColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimeSupportNull() {
                return this.IsNull(this.tableVariables.TimeSupportColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimeSupportNull() {
                this[this.tableVariables.TimeSupportColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimeUnitsIDNull() {
                return this.IsNull(this.tableVariables.TimeUnitsIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimeUnitsIDNull() {
                this[this.tableVariables.TimeUnitsIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGeneralCategoryNull() {
                return this.IsNull(this.tableVariables.GeneralCategoryColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGeneralCategoryNull() {
                this[this.tableVariables.GeneralCategoryColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoDataValueNull() {
                return this.IsNull(this.tableVariables.NoDataValueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoDataValueNull() {
                this[this.tableVariables.NoDataValueColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnetworkIdNull() {
                return this.IsNull(this.tableVariables.networkIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnetworkIdNull() {
                this[this.tableVariables.networkIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVariableUnitsIDNull() {
                return this.IsNull(this.tableVariables.VariableUnitsIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVariableUnitsIDNull() {
                this[this.tableVariables.VariableUnitsIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmediumCodeNull() {
                return this.IsNull(this.tableVariables.mediumCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmediumCodeNull() {
                this[this.tableVariables.mediumCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitsNull() {
                return this.IsNull(this.tableVariables.UnitsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitsNull() {
                this[this.tableVariables.UnitsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitTypeNull() {
                return this.IsNull(this.tableVariables.UnitTypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitTypeNull() {
                this[this.tableVariables.UnitTypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitAbbreviationNull() {
                return this.IsNull(this.tableVariables.UnitAbbreviationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitAbbreviationNull() {
                this[this.tableVariables.UnitAbbreviationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataTypeNull() {
                return this.IsNull(this.tableVariables.DataTypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataTypeNull() {
                this[this.tableVariables.DataTypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstat_cdNull() {
                return this.IsNull(this.tableVariables.stat_cdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstat_cdNull() {
                this[this.tableVariables.stat_cdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class seriesCatalogRow : System.Data.DataRow {
            
            private seriesCatalogDataTable tableseriesCatalog;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal seriesCatalogRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableseriesCatalog = ((seriesCatalogDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long siteID {
                get {
                    try {
                        return ((long)(this[this.tableseriesCatalog.siteIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'siteID\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.siteIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SiteCode {
                get {
                    try {
                        return ((string)(this[this.tableseriesCatalog.SiteCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SiteCode\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.SiteCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string siteName {
                get {
                    try {
                        return ((string)(this[this.tableseriesCatalog.siteNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'siteName\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.siteNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VariableCode {
                get {
                    try {
                        return ((string)(this[this.tableseriesCatalog.VariableCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VariableCode\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.VariableCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VariableName {
                get {
                    try {
                        return ((string)(this[this.tableseriesCatalog.VariableNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VariableName\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.VariableNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VariableUnitsName {
                get {
                    try {
                        return ((string)(this[this.tableseriesCatalog.VariableUnitsNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VariableUnitsName\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.VariableUnitsNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int VariableUnitsID {
                get {
                    try {
                        return ((int)(this[this.tableseriesCatalog.VariableUnitsIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VariableUnitsID\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.VariableUnitsIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SampleMedium {
                get {
                    try {
                        return ((string)(this[this.tableseriesCatalog.SampleMediumColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SampleMedium\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.SampleMediumColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueType {
                get {
                    try {
                        return ((string)(this[this.tableseriesCatalog.ValueTypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ValueType\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.ValueTypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TimeSupport {
                get {
                    try {
                        return ((int)(this[this.tableseriesCatalog.TimeSupportColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TimeSupport\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.TimeSupportColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TimeUnitsID {
                get {
                    try {
                        return ((int)(this[this.tableseriesCatalog.TimeUnitsIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TimeUnitsID\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.TimeUnitsIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TimeUnitsName {
                get {
                    try {
                        return ((string)(this[this.tableseriesCatalog.TimeUnitsNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TimeUnitsName\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.TimeUnitsNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GeneralCategory {
                get {
                    try {
                        return ((string)(this[this.tableseriesCatalog.GeneralCategoryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GeneralCategory\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.GeneralCategoryColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MethodID {
                get {
                    try {
                        return ((int)(this[this.tableseriesCatalog.MethodIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MethodID\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.MethodIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MethodName {
                get {
                    try {
                        return ((string)(this[this.tableseriesCatalog.MethodNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MethodName\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.MethodNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SourceID {
                get {
                    try {
                        return ((int)(this[this.tableseriesCatalog.SourceIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SourceID\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.SourceIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Organization {
                get {
                    try {
                        return ((string)(this[this.tableseriesCatalog.OrganizationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Organization\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.OrganizationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SourceDescription {
                get {
                    try {
                        return ((string)(this[this.tableseriesCatalog.SourceDescriptionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SourceDescription\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.SourceDescriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int QualityControlLevelID {
                get {
                    try {
                        return ((int)(this[this.tableseriesCatalog.QualityControlLevelIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'QualityControlLevelID\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.QualityControlLevelIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BeginDateTime {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableseriesCatalog.BeginDateTimeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BeginDateTime\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.BeginDateTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndDateTime {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableseriesCatalog.EndDateTimeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EndDateTime\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.EndDateTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueCount {
                get {
                    try {
                        return ((string)(this[this.tableseriesCatalog.ValueCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ValueCount\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.ValueCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataType {
                get {
                    try {
                        return ((string)(this[this.tableseriesCatalog.DataTypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DataType\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.DataTypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mediumCode {
                get {
                    try {
                        return ((string)(this[this.tableseriesCatalog.mediumCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'mediumCode\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.mediumCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string usgs_stat_cd {
                get {
                    try {
                        return ((string)(this[this.tableseriesCatalog.usgs_stat_cdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'usgs_stat_cd\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.usgs_stat_cdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VariableUnitsAbbreviation {
                get {
                    try {
                        return ((string)(this[this.tableseriesCatalog.VariableUnitsAbbreviationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VariableUnitsAbbreviation\' in table \'seriesCatalog\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.VariableUnitsAbbreviationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string usgs_agency {
                get {
                    try {
                        return ((string)(this[this.tableseriesCatalog.usgs_agencyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'usgs_agency\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.usgs_agencyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isRegular {
                get {
                    try {
                        return ((bool)(this[this.tableseriesCatalog.isRegularColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'isRegular\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.isRegularColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NoDataValue {
                get {
                    try {
                        return ((double)(this[this.tableseriesCatalog.NoDataValueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NoDataValue\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.NoDataValueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VariableVocabulary {
                get {
                    try {
                        return ((string)(this[this.tableseriesCatalog.VariableVocabularyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VariableVocabulary\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.VariableVocabularyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SiteVocabulary {
                get {
                    try {
                        return ((string)(this[this.tableseriesCatalog.SiteVocabularyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SiteVocabulary\' in table \'seriesCatalog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseriesCatalog.SiteVocabularyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssiteIDNull() {
                return this.IsNull(this.tableseriesCatalog.siteIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsiteIDNull() {
                this[this.tableseriesCatalog.siteIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteCodeNull() {
                return this.IsNull(this.tableseriesCatalog.SiteCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteCodeNull() {
                this[this.tableseriesCatalog.SiteCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssiteNameNull() {
                return this.IsNull(this.tableseriesCatalog.siteNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsiteNameNull() {
                this[this.tableseriesCatalog.siteNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVariableCodeNull() {
                return this.IsNull(this.tableseriesCatalog.VariableCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVariableCodeNull() {
                this[this.tableseriesCatalog.VariableCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVariableNameNull() {
                return this.IsNull(this.tableseriesCatalog.VariableNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVariableNameNull() {
                this[this.tableseriesCatalog.VariableNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVariableUnitsNameNull() {
                return this.IsNull(this.tableseriesCatalog.VariableUnitsNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVariableUnitsNameNull() {
                this[this.tableseriesCatalog.VariableUnitsNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVariableUnitsIDNull() {
                return this.IsNull(this.tableseriesCatalog.VariableUnitsIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVariableUnitsIDNull() {
                this[this.tableseriesCatalog.VariableUnitsIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSampleMediumNull() {
                return this.IsNull(this.tableseriesCatalog.SampleMediumColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSampleMediumNull() {
                this[this.tableseriesCatalog.SampleMediumColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueTypeNull() {
                return this.IsNull(this.tableseriesCatalog.ValueTypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueTypeNull() {
                this[this.tableseriesCatalog.ValueTypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimeSupportNull() {
                return this.IsNull(this.tableseriesCatalog.TimeSupportColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimeSupportNull() {
                this[this.tableseriesCatalog.TimeSupportColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimeUnitsIDNull() {
                return this.IsNull(this.tableseriesCatalog.TimeUnitsIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimeUnitsIDNull() {
                this[this.tableseriesCatalog.TimeUnitsIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimeUnitsNameNull() {
                return this.IsNull(this.tableseriesCatalog.TimeUnitsNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimeUnitsNameNull() {
                this[this.tableseriesCatalog.TimeUnitsNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGeneralCategoryNull() {
                return this.IsNull(this.tableseriesCatalog.GeneralCategoryColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGeneralCategoryNull() {
                this[this.tableseriesCatalog.GeneralCategoryColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMethodIDNull() {
                return this.IsNull(this.tableseriesCatalog.MethodIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMethodIDNull() {
                this[this.tableseriesCatalog.MethodIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMethodNameNull() {
                return this.IsNull(this.tableseriesCatalog.MethodNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMethodNameNull() {
                this[this.tableseriesCatalog.MethodNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSourceIDNull() {
                return this.IsNull(this.tableseriesCatalog.SourceIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSourceIDNull() {
                this[this.tableseriesCatalog.SourceIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrganizationNull() {
                return this.IsNull(this.tableseriesCatalog.OrganizationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrganizationNull() {
                this[this.tableseriesCatalog.OrganizationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSourceDescriptionNull() {
                return this.IsNull(this.tableseriesCatalog.SourceDescriptionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSourceDescriptionNull() {
                this[this.tableseriesCatalog.SourceDescriptionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQualityControlLevelIDNull() {
                return this.IsNull(this.tableseriesCatalog.QualityControlLevelIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQualityControlLevelIDNull() {
                this[this.tableseriesCatalog.QualityControlLevelIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBeginDateTimeNull() {
                return this.IsNull(this.tableseriesCatalog.BeginDateTimeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBeginDateTimeNull() {
                this[this.tableseriesCatalog.BeginDateTimeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndDateTimeNull() {
                return this.IsNull(this.tableseriesCatalog.EndDateTimeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndDateTimeNull() {
                this[this.tableseriesCatalog.EndDateTimeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueCountNull() {
                return this.IsNull(this.tableseriesCatalog.ValueCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueCountNull() {
                this[this.tableseriesCatalog.ValueCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataTypeNull() {
                return this.IsNull(this.tableseriesCatalog.DataTypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataTypeNull() {
                this[this.tableseriesCatalog.DataTypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmediumCodeNull() {
                return this.IsNull(this.tableseriesCatalog.mediumCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmediumCodeNull() {
                this[this.tableseriesCatalog.mediumCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isusgs_stat_cdNull() {
                return this.IsNull(this.tableseriesCatalog.usgs_stat_cdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setusgs_stat_cdNull() {
                this[this.tableseriesCatalog.usgs_stat_cdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVariableUnitsAbbreviationNull() {
                return this.IsNull(this.tableseriesCatalog.VariableUnitsAbbreviationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVariableUnitsAbbreviationNull() {
                this[this.tableseriesCatalog.VariableUnitsAbbreviationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isusgs_agencyNull() {
                return this.IsNull(this.tableseriesCatalog.usgs_agencyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setusgs_agencyNull() {
                this[this.tableseriesCatalog.usgs_agencyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisRegularNull() {
                return this.IsNull(this.tableseriesCatalog.isRegularColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisRegularNull() {
                this[this.tableseriesCatalog.isRegularColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoDataValueNull() {
                return this.IsNull(this.tableseriesCatalog.NoDataValueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoDataValueNull() {
                this[this.tableseriesCatalog.NoDataValueColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVariableVocabularyNull() {
                return this.IsNull(this.tableseriesCatalog.VariableVocabularyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVariableVocabularyNull() {
                this[this.tableseriesCatalog.VariableVocabularyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteVocabularyNull() {
                return this.IsNull(this.tableseriesCatalog.SiteVocabularyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteVocabularyNull() {
                this[this.tableseriesCatalog.SiteVocabularyColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class sitesRowChangeEvent : System.EventArgs {
            
            private sitesRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sitesRowChangeEvent(sitesRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sitesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class VariablesRowChangeEvent : System.EventArgs {
            
            private VariablesRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VariablesRowChangeEvent(VariablesRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VariablesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class seriesCatalogRowChangeEvent : System.EventArgs {
            
            private seriesCatalogRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public seriesCatalogRowChangeEvent(seriesCatalogRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public seriesCatalogRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace NwisWOFService.UsgsDbDailyValuesTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class sitesTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sitesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "sites";
            tableMapping.ColumnMappings.Add("SiteID", "SiteID");
            tableMapping.ColumnMappings.Add("SiteCode", "SiteCode");
            tableMapping.ColumnMappings.Add("SiteName", "SiteName");
            tableMapping.ColumnMappings.Add("Latitude", "Latitude");
            tableMapping.ColumnMappings.Add("Longitude", "Longitude");
            tableMapping.ColumnMappings.Add("LatLongDatumID", "LatLongDatumID");
            tableMapping.ColumnMappings.Add("Elevation_m", "Elevation_m");
            tableMapping.ColumnMappings.Add("VerticalDatum", "VerticalDatum");
            tableMapping.ColumnMappings.Add("PosAccuracy_m", "PosAccuracy_m");
            tableMapping.ColumnMappings.Add("County", "County");
            tableMapping.ColumnMappings.Add("State", "State");
            tableMapping.ColumnMappings.Add("Comments", "Comments");
            tableMapping.ColumnMappings.Add("usgs_State_fipCode", "usgs_State_fipCode");
            tableMapping.ColumnMappings.Add("Usgs_County_fipsCode", "Usgs_County_fipsCode");
            tableMapping.ColumnMappings.Add("usgs_agency", "usgs_agency");
            tableMapping.ColumnMappings.Add("usgs_UsesDaylightSavingsTime", "usgs_UsesDaylightSavingsTime");
            tableMapping.ColumnMappings.Add("odws_timeZoneAbbreviation", "odws_timeZoneAbbreviation");
            tableMapping.ColumnMappings.Add("SiteVocabulary", "SiteVocabulary");
            tableMapping.ColumnMappings.Add("usgs_station_type", "usgs_station_type");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::NwisWOFService.Properties.Settings.Default.USGSSept2007ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     SiteID, usgs_agency, SiteCode, SiteName, Latitude, Longitude, LatLongDatumID, Elevation_m, VerticalDatum, PosAccuracy_m, County, State, 
                      Comments, odws_timeZoneAbbreviation, usgs_State_fipCode, Usgs_County_fipsCode, usgs_UsesDaylightSavingsTime, SiteVocabulary, 
                      usgs_station_type
FROM         odm_dv_sites";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT Comments, County, Elevation_m, LatLongDatumID, Latitude, Longitude, PosAccuracy_m, SiteCode, SiteID, SiteName, SiteVocabulary, State, Usgs_County_fipsCode, VerticalDatum, odws_timeZoneAbbreviation, usgs_State_fipCode, usgs_UsesDaylightSavingsTime, usgs_agency, usgs_station_type FROM odm_dv_sites WHERE (usgs_agency = @agency) AND (SiteCode = @siteCode)";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@agency", System.Data.SqlDbType.VarChar, 5, System.Data.ParameterDirection.Input, 0, 0, "usgs_agency", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@siteCode", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "SiteCode", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     Comments, County, Elevation_m, LatLongDatumID, Latitude, Longitude, PosAccuracy_m, SiteCode, SiteID, SiteName, SiteVocabulary, State, 
                      Usgs_County_fipsCode, VerticalDatum, odws_timeZoneAbbreviation, usgs_State_fipCode, usgs_UsesDaylightSavingsTime, usgs_agency, 
                      usgs_station_type
FROM         odm_dv_sites
WHERE     (SiteCode = @siteCode)";
            this._commandCollection[2].CommandType = System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@siteCode", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "SiteCode", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(UsgsDbDailyValues.sitesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual UsgsDbDailyValues.sitesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            UsgsDbDailyValues.sitesDataTable dataTable = new UsgsDbDailyValues.sitesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByAgencySiteCode(UsgsDbDailyValues.sitesDataTable dataTable, string agency, string siteCode) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((agency == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(agency));
            }
            if ((siteCode == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(siteCode));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual UsgsDbDailyValues.sitesDataTable GetDataByAgencySiteCode(string agency, string siteCode) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((agency == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(agency));
            }
            if ((siteCode == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(siteCode));
            }
            UsgsDbDailyValues.sitesDataTable dataTable = new UsgsDbDailyValues.sitesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySiteCode(UsgsDbDailyValues.sitesDataTable dataTable, string siteCode) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((siteCode == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(siteCode));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual UsgsDbDailyValues.sitesDataTable GetDataBySiteCode(string siteCode) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((siteCode == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(siteCode));
            }
            UsgsDbDailyValues.sitesDataTable dataTable = new UsgsDbDailyValues.sitesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VariablesTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public VariablesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Variables";
            tableMapping.ColumnMappings.Add("VariableID", "VariableID");
            tableMapping.ColumnMappings.Add("VariableCode", "VariableCode");
            tableMapping.ColumnMappings.Add("VariableName", "VariableName");
            tableMapping.ColumnMappings.Add("SampleMedium", "SampleMedium");
            tableMapping.ColumnMappings.Add("ValueType", "ValueType");
            tableMapping.ColumnMappings.Add("isRegular", "isRegular");
            tableMapping.ColumnMappings.Add("TimeSupport", "TimeSupport");
            tableMapping.ColumnMappings.Add("TimeUnitsID", "TimeUnitsID");
            tableMapping.ColumnMappings.Add("GeneralCategory", "GeneralCategory");
            tableMapping.ColumnMappings.Add("NoDataValue", "NoDataValue");
            tableMapping.ColumnMappings.Add("networkId", "networkId");
            tableMapping.ColumnMappings.Add("VariableUnitsID", "VariableUnitsID");
            tableMapping.ColumnMappings.Add("mediumCode", "mediumCode");
            tableMapping.ColumnMappings.Add("Units", "Units");
            tableMapping.ColumnMappings.Add("UnitType", "UnitType");
            tableMapping.ColumnMappings.Add("UnitAbbreviation", "UnitAbbreviation");
            tableMapping.ColumnMappings.Add("DataType", "DataType");
            tableMapping.ColumnMappings.Add("stat_cd", "stat_cd");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::NwisWOFService.Properties.Settings.Default.USGSSept2007ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     odm_dv_variables.VariableID, odm_dv_variables.VariableCode, odm_dv_variables.VariableName, odm_dv_variables.SampleMedium, 
                      odm_dv_variables.ValueType, odm_dv_variables.isRegular, odm_dv_variables.TimeSupport, odm_dv_variables.TimeUnitsID, 
                      odm_dv_variables.GeneralCategory, odm_dv_variables.NoDataValue, odm_dv_variables.networkId, odm_dv_variables.VariableUnitsID, 
                      odm_dv_variables.mediumCode, odm_dv_variables.DataType, Units.Units, Units.UnitType, Units.UnitAbbreviation, odm_dv_variables.stat_cd
FROM         odm_dv_variables INNER JOIN
                      Units ON odm_dv_variables.VariableUnitsID = Units.UnitID";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     odm_dv_variables.VariableID, odm_dv_variables.VariableCode, odm_dv_variables.VariableName, odm_dv_variables.SampleMedium, 
                      odm_dv_variables.ValueType, odm_dv_variables.isRegular, odm_dv_variables.TimeSupport, odm_dv_variables.TimeUnitsID, 
                      odm_dv_variables.GeneralCategory, odm_dv_variables.NoDataValue, odm_dv_variables.networkId, odm_dv_variables.VariableUnitsID, 
                      odm_dv_variables.mediumCode, odm_dv_variables.DataType, Units.Units, Units.UnitType, Units.UnitAbbreviation, odm_dv_variables.stat_cd
FROM         odm_dv_variables INNER JOIN
                      Units ON odm_dv_variables.VariableUnitsID = Units.UnitID";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[2] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     odm_dv_variables.VariableID, odm_dv_variables.VariableCode, odm_dv_variables.VariableName, odm_dv_variables.SampleMedium, 
                      odm_dv_variables.ValueType, odm_dv_variables.isRegular, odm_dv_variables.TimeSupport, odm_dv_variables.TimeUnitsID, 
                      odm_dv_variables.GeneralCategory, odm_dv_variables.NoDataValue, odm_dv_variables.networkId, odm_dv_variables.VariableUnitsID, 
                      odm_dv_variables.mediumCode, Units.Units, Units.UnitType, Units.UnitAbbreviation, odm_dv_variables.stat_cd, odm_dv_variables.DataType
FROM         odm_dv_variables INNER JOIN
                      Units ON odm_dv_variables.VariableUnitsID = Units.UnitID
WHERE     (odm_dv_variables.VariableCode = @variableCode)";
            this._commandCollection[2].CommandType = System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@variableCode", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "VariableCode", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT     odm_dv_variables.VariableID, odm_dv_variables.VariableCode, odm_dv_variables.VariableName, odm_dv_variables.SampleMedium, 
                      odm_dv_variables.ValueType, odm_dv_variables.isRegular, odm_dv_variables.TimeSupport, odm_dv_variables.TimeUnitsID, 
                      odm_dv_variables.GeneralCategory, odm_dv_variables.NoDataValue, odm_dv_variables.networkId, odm_dv_variables.VariableUnitsID, 
                      odm_dv_variables.mediumCode, Units.Units, Units.UnitType, Units.UnitAbbreviation, odm_dv_variables.DataType, odm_dv_variables.stat_cd
FROM         odm_dv_variables INNER JOIN
                      Units ON odm_dv_variables.VariableUnitsID = Units.UnitID
WHERE     (odm_dv_variables.VariableID = @variableID)";
            this._commandCollection[3].CommandType = System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new System.Data.SqlClient.SqlParameter("@variableID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "VariableID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(UsgsDbDailyValues.VariablesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual UsgsDbDailyValues.VariablesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            UsgsDbDailyValues.VariablesDataTable dataTable = new UsgsDbDailyValues.VariablesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(UsgsDbDailyValues.VariablesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual UsgsDbDailyValues.VariablesDataTable GetDataBy() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            UsgsDbDailyValues.VariablesDataTable dataTable = new UsgsDbDailyValues.VariablesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByVariableCode(UsgsDbDailyValues.VariablesDataTable dataTable, string variableCode) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((variableCode == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(variableCode));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual UsgsDbDailyValues.VariablesDataTable GetDataByVariableCode(string variableCode) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((variableCode == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(variableCode));
            }
            UsgsDbDailyValues.VariablesDataTable dataTable = new UsgsDbDailyValues.VariablesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByVariableID(UsgsDbDailyValues.VariablesDataTable dataTable, int variableID) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(variableID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual UsgsDbDailyValues.VariablesDataTable GetDataByVariableID(int variableID) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(variableID));
            UsgsDbDailyValues.VariablesDataTable dataTable = new UsgsDbDailyValues.VariablesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class seriesCatalogTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public seriesCatalogTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "seriesCatalog";
            tableMapping.ColumnMappings.Add("siteID", "siteID");
            tableMapping.ColumnMappings.Add("SiteCode", "SiteCode");
            tableMapping.ColumnMappings.Add("siteName", "siteName");
            tableMapping.ColumnMappings.Add("VariableCode", "VariableCode");
            tableMapping.ColumnMappings.Add("VariableName", "VariableName");
            tableMapping.ColumnMappings.Add("VariableUnitsName", "VariableUnitsName");
            tableMapping.ColumnMappings.Add("VariableUnitsID", "VariableUnitsID");
            tableMapping.ColumnMappings.Add("SampleMedium", "SampleMedium");
            tableMapping.ColumnMappings.Add("ValueType", "ValueType");
            tableMapping.ColumnMappings.Add("TimeSupport", "TimeSupport");
            tableMapping.ColumnMappings.Add("TimeUnitsID", "TimeUnitsID");
            tableMapping.ColumnMappings.Add("TimeUnitsName", "TimeUnitsName");
            tableMapping.ColumnMappings.Add("GeneralCategory", "GeneralCategory");
            tableMapping.ColumnMappings.Add("MethodID", "MethodID");
            tableMapping.ColumnMappings.Add("MethodName", "MethodName");
            tableMapping.ColumnMappings.Add("SourceID", "SourceID");
            tableMapping.ColumnMappings.Add("Organization", "Organization");
            tableMapping.ColumnMappings.Add("SourceDescription", "SourceDescription");
            tableMapping.ColumnMappings.Add("QualityControlLevelID", "QualityControlLevelID");
            tableMapping.ColumnMappings.Add("BeginDateTime", "BeginDateTime");
            tableMapping.ColumnMappings.Add("EndDateTime", "EndDateTime");
            tableMapping.ColumnMappings.Add("ValueCount", "ValueCount");
            tableMapping.ColumnMappings.Add("DataType", "DataType");
            tableMapping.ColumnMappings.Add("mediumCode", "mediumCode");
            tableMapping.ColumnMappings.Add("usgs_stat_cd", "usgs_stat_cd");
            tableMapping.ColumnMappings.Add("VariableUnitsAbbreviation", "VariableUnitsAbbreviation");
            tableMapping.ColumnMappings.Add("usgs_agency", "usgs_agency");
            tableMapping.ColumnMappings.Add("isRegular", "isRegular");
            tableMapping.ColumnMappings.Add("NoDataValue", "NoDataValue");
            tableMapping.ColumnMappings.Add("VariableVocabulary", "VariableVocabulary");
            tableMapping.ColumnMappings.Add("SiteVocabulary", "SiteVocabulary");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::NwisWOFService.Properties.Settings.Default.USGSSept2007ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     siteID, usgs_agency, SiteCode, siteName, TimeSupport, TimeUnitsID, TimeUnitsName, MethodName, MethodID, SourceID, Organization, 
                      SourceDescription, QualityControlLevelID, BeginDateTime, EndDateTime, ValueCount, usgs_stat_cd, VariableCode, VariableName, SampleMedium, 
                      ValueType, isRegular, GeneralCategory, NoDataValue, VariableUnitsID, DataType, VariableUnitsName, VariableUnitsAbbreviation, VariableVocabulary, 
                      SiteVocabulary
FROM         odm_dv_seriesCatalog";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     BeginDateTime, DataType, EndDateTime, GeneralCategory, MethodID, MethodName, NoDataValue, Organization, QualityControlLevelID, 
                      SampleMedium, SiteCode, SiteVocabulary, SourceDescription, SourceID, TimeSupport, TimeUnitsID, TimeUnitsName, ValueCount, ValueType, 
                      VariableCode, VariableName, VariableUnitsAbbreviation, VariableUnitsID, VariableUnitsName, VariableVocabulary, isRegular, siteID, siteName, 
                      usgs_agency, usgs_stat_cd
FROM         odm_dv_seriesCatalog
WHERE     (usgs_agency = @agency) AND (SiteCode = @siteCode)";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@agency", System.Data.SqlDbType.VarChar, 5, System.Data.ParameterDirection.Input, 0, 0, "usgs_agency", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@siteCode", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "SiteCode", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     BeginDateTime, DataType, EndDateTime, GeneralCategory, MethodID, MethodName, NoDataValue, Organization, QualityControlLevelID, 
                      SampleMedium, SiteCode, SiteVocabulary, SourceDescription, SourceID, TimeSupport, TimeUnitsID, TimeUnitsName, ValueCount, ValueType, 
                      VariableCode, VariableName, VariableUnitsAbbreviation, VariableUnitsID, VariableUnitsName, VariableVocabulary, isRegular, siteID, siteName, 
                      usgs_agency, usgs_stat_cd
FROM         odm_dv_seriesCatalog
WHERE     (SiteCode = @siteCode)";
            this._commandCollection[2].CommandType = System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@siteCode", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "SiteCode", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(UsgsDbDailyValues.seriesCatalogDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual UsgsDbDailyValues.seriesCatalogDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            UsgsDbDailyValues.seriesCatalogDataTable dataTable = new UsgsDbDailyValues.seriesCatalogDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByAgencySiteCode(UsgsDbDailyValues.seriesCatalogDataTable dataTable, string agency, string siteCode) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((agency == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(agency));
            }
            if ((siteCode == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(siteCode));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual UsgsDbDailyValues.seriesCatalogDataTable GetDataByAgencySiteCode(string agency, string siteCode) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((agency == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(agency));
            }
            if ((siteCode == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(siteCode));
            }
            UsgsDbDailyValues.seriesCatalogDataTable dataTable = new UsgsDbDailyValues.seriesCatalogDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySiteCode(UsgsDbDailyValues.seriesCatalogDataTable dataTable, string siteCode) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((siteCode == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(siteCode));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual UsgsDbDailyValues.seriesCatalogDataTable GetDataBySiteCode(string siteCode) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((siteCode == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(siteCode));
            }
            UsgsDbDailyValues.seriesCatalogDataTable dataTable = new UsgsDbDailyValues.seriesCatalogDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591