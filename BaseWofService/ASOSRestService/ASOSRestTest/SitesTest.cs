// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using System.Data.SqlClient;
using NUnit.Framework;
using System;
using System.Text;
using System.Collections.Generic;
using NCDC.RestService.v1.Export;
using NCDC.RestService.v1;

namespace ASOSRestTest
{
    /// <summary>
    ///This is a test class for NCDC.RestService.Export.SitesToDb and is intended
    ///to contain all NCDC.RestService.Export.SitesToDb Unit Tests
    ///</summary>
    [TestFixture()]
    public class SitesToDbTest
    {


   


        /// <summary>
        ///A test for AddToDB (SiteInfoNCDC)
        ///</summary>
        [Test]
        public void AddToDBTest()
        {
            string connectionString = "Data Source=localhost;Initial Catalog=ASOS;Integrated Security=True;"; // TODO: Initialize to an appropriate value
            string tableName = "siteInfo$";

            SitesToDb target = new SitesToDb(connectionString);

            SiteInfoNCDC site = new SiteInfoNCDC();
            site.StationID ="09999999";
            site.SiteName = "TEst";
            site.SetLongitude("179");
            site.SetLatitude("80");
            site.SetBeginDate("200601");
            site.SetEndDate( "200801");
            site.Elevation = 0;
            site.DatasetID = "-1";



            target.AddToDB(site, ExportType.ALL, tableName);

            SqlConnection con = new SqlConnection();
            con.ConnectionString=connectionString;
            con.Open();
            SqlCommand comm = con.CreateCommand();
            comm.CommandText = "Select count(SiteID) from "+tableName+ " where SiteID ='" + site.StationID + "'";
           int numROws =(int) comm.ExecuteScalar();
 Assert.LessOrEqual(numROws,1,"Retrned more than one row");



           // Assert.Inconclusive("A method that does not return a value cannot be verified.");
        }

        /// <summary>
        ///A test for SitesToDb (string)
        ///</summary>
        //[Test]
        //public void ConstructorTest()
        //{
        //    string connectionString = null; // TODO: Initialize to an appropriate value

        //    SitesToDb target = new SitesToDb(connectionString);
             
        //    // TODO: Implement code to verify target
        //    Assert.Inconclusive("TODO: Implement code to verify target");
        //}

    }


}
