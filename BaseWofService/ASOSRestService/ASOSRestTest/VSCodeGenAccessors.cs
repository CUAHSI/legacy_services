// ------------------------------------------------------------------------------
//<autogenerated>
//        This code was generated by Microsoft Visual Studio Team System 2005.
//
//        Changes to this file may cause incorrect behavior and will be lost if
//        the code is regenerated.
//</autogenerated>
//------------------------------------------------------------------------------
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace ASOSRestTest
{
[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class BaseAccessor {
    
    protected Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject m_privateObject;
    
    protected BaseAccessor(object target, Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType type) {
        m_privateObject = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject(target, type);
    }
    
    protected BaseAccessor(Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType type) : 
            this(null, type) {
    }
    
    internal virtual object Target {
        get {
            return m_privateObject.Target;
        }
    }
    
    public override string ToString() {
        return this.Target.ToString();
    }
    
    public override bool Equals(object obj) {
        if (typeof(BaseAccessor).IsInstanceOfType(obj)) {
            obj = ((BaseAccessor)(obj)).Target;
        }
        return this.Target.Equals(obj);
    }
    
    public override int GetHashCode() {
        return this.Target.GetHashCode();
    }
}


[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class NCDC_RestService_SiteInfoNCDCAccessor : BaseAccessor {
    
    protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType(typeof(NCDC.RestService.v1.SiteInfoNCDC));
    
    internal NCDC_RestService_SiteInfoNCDCAccessor(NCDC.RestService.v1.SiteInfoNCDC target) : 
            base(target, m_privateType) {
    }
    
    internal string datasetID {
        get {
            string ret = ((string)(m_privateObject.GetField("datasetID")));
            return ret;
        }
        set {
            m_privateObject.SetField("datasetID", value);
        }
    }
    
    internal string regionField {
        get {
            string ret = ((string)(m_privateObject.GetField("regionField")));
            return ret;
        }
        set {
            m_privateObject.SetField("regionField", value);
        }
    }
    
    internal string siteNameField {
        get {
            string ret = ((string)(m_privateObject.GetField("siteNameField")));
            return ret;
        }
        set {
            m_privateObject.SetField("siteNameField", value);
        }
    }
    
    internal string stationIDField {
        get {
            string ret = ((string)(m_privateObject.GetField("stationIDField")));
            return ret;
        }
        set {
            m_privateObject.SetField("stationIDField", value);
        }
    }
    
    internal float latitudeField {
        get {
            float ret = ((float)(m_privateObject.GetField("latitudeField")));
            return ret;
        }
        set {
            m_privateObject.SetField("latitudeField", value);
        }
    }
    
    internal float longitudeField {
        get {
            float ret = ((float)(m_privateObject.GetField("longitudeField")));
            return ret;
        }
        set {
            m_privateObject.SetField("longitudeField", value);
        }
    }
    
    internal float elev {
        get {
            float ret = ((float)(m_privateObject.GetField("elev")));
            return ret;
        }
        set {
            m_privateObject.SetField("elev", value);
        }
    }
    
    internal global::System.DateTime endDate {
        get {
            global::System.DateTime ret = ((global::System.DateTime)(m_privateObject.GetField("endDate")));
            return ret;
        }
        set {
            m_privateObject.SetField("endDate", value);
        }
    }
    
    internal global::System.DateTime beginDate {
        get {
            global::System.DateTime ret = ((global::System.DateTime)(m_privateObject.GetField("beginDate")));
            return ret;
        }
        set {
            m_privateObject.SetField("beginDate", value);
        }
    }
    
    internal global::System.DateTime DateTimeFromYearMonth(string YYYYmm) {
        object[] args = new object[] {
                YYYYmm};
        global::System.DateTime ret = ((global::System.DateTime)(m_privateObject.Invoke("DateTimeFromYearMonth", new System.Type[] {
                    typeof(string)}, args)));
        return ret;
    }
}
}
